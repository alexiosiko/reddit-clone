{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { palette } from \"../styles/global-styles\";\nimport { useState } from \"react\";\nimport InsertImage from \"../components/InsertImage.js\";\nimport Header from \"../components/Header\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction Create() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    title = _useState2[0],\n    setTitle = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    description = _useState4[0],\n    setDescription = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    image64 = _useState6[0],\n    setImage64 = _useState6[1];\n  var _useState7 = useState({}),\n    _useState8 = _slicedToArray(_useState7, 2),\n    postStatus = _useState8[0],\n    setPostStatus = _useState8[1];\n  function handleOnSubmit() {\n    return _handleOnSubmit.apply(this, arguments);\n  }\n  function _handleOnSubmit() {\n    _handleOnSubmit = _asyncToGenerator(function* () {\n      if (title == \"\" || description == \"\") {\n        console.warn(\"Required fields missing...\");\n        return;\n      }\n      setPostStatus({\n        result: 'Uploading post...',\n        color: 'yellow'\n      });\n      var post = createPost();\n      console.log(post);\n      setPostStatus({\n        result: 'Successfully uploaded post!',\n        color: 'green'\n      });\n    });\n    return _handleOnSubmit.apply(this, arguments);\n  }\n  function createPost() {\n    return {\n      title: title,\n      description: description,\n      owner: \"owner\",\n      image64: image64,\n      likes: 0,\n      dislikes: 0\n    };\n  }\n  function uploadPost(_x) {\n    return _uploadPost.apply(this, arguments);\n  }\n  function _uploadPost() {\n    _uploadPost = _asyncToGenerator(function* (post) {\n      var response = yield fetch(\"https://reddit-clone-5ctl.onrender.com/uploadpost\", {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(post)\n      });\n      return response;\n    });\n    return _uploadPost.apply(this, arguments);\n  }\n  return _jsx(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return Keyboard.dismiss();\n    },\n    style: {\n      flex: 1,\n      backgroundColor: 'red'\n    },\n    children: _jsxs(View, {\n      children: [_jsx(Header, {\n        header: \"Create\"\n      }), _jsxs(View, {\n        style: styles.body,\n        children: [_jsxs(View, {\n          style: styles.leftRightView,\n          children: [_jsx(Image, {\n            source: require(\"./../../../assets/sprites/profile-pic.png\"),\n            style: styles.profilePic\n          }), _jsxs(View, {\n            style: {\n              marginLeft: 5,\n              justifyContent: 'center'\n            },\n            children: [_jsx(Text, {\n              style: styles.name,\n              children: \"Alexi Ikonomou\"\n            }), _jsx(Text, {\n              style: styles.username,\n              children: \"@alexiosiko\"\n            })]\n          }), _jsx(InsertImage, {\n            setImage64: setImage64\n          })]\n        }), _jsx(TextInput, {\n          style: [styles.titleInput, styles.textInput],\n          onChange: handleOnChangeTitle,\n          placeholder: \"Post title\",\n          placeholderTextColor: palette.titlecolor\n        }), _jsx(TextInput, {\n          style: [styles.descritionInput, styles.textInput],\n          onChange: handleOnChangeDescription,\n          placeholder: \"What do you want to talk about?\",\n          placeholderTextColor: palette.textcolor,\n          multiline: true,\n          textAlignVertical: \"top\"\n        }), _jsx(TouchableOpacity, {\n          style: styles.button,\n          onPress: handleOnSubmit,\n          children: _jsx(Text, {\n            children: \"Upload Post\"\n          })\n        }), _jsx(Text, {\n          style: {\n            color: postStatus.color,\n            textAlign: 'center',\n            marginTop: 20\n          },\n          children: postStatus.result\n        })]\n      })]\n    })\n  });\n  function handleOnChangeTitle(e) {\n    setTitle(e.nativeEvent.text);\n  }\n  function handleOnChangeDescription(e) {\n    setDescription(e.nativeEvent.text);\n  }\n}\nvar styles = StyleSheet.create({\n  body: {\n    padding: 20\n  },\n  leftRightView: {\n    alignItems: 'center',\n    marginLeft: 10,\n    flexDirection: 'row'\n  },\n  name: {\n    color: palette.titlecolor,\n    fontSize: 20\n  },\n  username: {\n    color: palette.textcolor,\n    fontSize: 10\n  },\n  profilePic: {\n    borderRadius: 25,\n    width: 30,\n    height: 30\n  },\n  textInput: {\n    backgroundColor: palette.otherNeutral,\n    borderRadius: 20,\n    marginTop: 10\n  },\n  titleInput: {\n    color: palette.titlecolor,\n    padding: 20\n  },\n  descritionInput: {\n    color: palette.textcolor,\n    padding: 20,\n    height: 220\n  },\n  button: {\n    marginTop: 15,\n    height: 30,\n    width: '50%',\n    alignSelf: 'center',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: palette.button,\n    borderRadius: 20\n  }\n});\nexport default Create;","map":{"version":3,"names":["palette","useState","InsertImage","Header","jsx","_jsx","jsxs","_jsxs","Create","_useState","_useState2","_slicedToArray","title","setTitle","_useState3","_useState4","description","setDescription","_useState5","_useState6","image64","setImage64","_useState7","_useState8","postStatus","setPostStatus","handleOnSubmit","_handleOnSubmit","apply","arguments","_asyncToGenerator","console","warn","result","color","post","createPost","log","owner","likes","dislikes","uploadPost","_x","_uploadPost","response","fetch","method","headers","body","JSON","stringify","TouchableWithoutFeedback","onPress","Keyboard","dismiss","style","flex","backgroundColor","children","View","header","styles","leftRightView","Image","source","require","profilePic","marginLeft","justifyContent","Text","name","username","TextInput","titleInput","textInput","onChange","handleOnChangeTitle","placeholder","placeholderTextColor","titlecolor","descritionInput","handleOnChangeDescription","textcolor","multiline","textAlignVertical","TouchableOpacity","button","textAlign","marginTop","e","nativeEvent","text","StyleSheet","create","padding","alignItems","flexDirection","fontSize","borderRadius","width","height","otherNeutral","alignSelf"],"sources":["C:/Users/alexi/Documents/react-native/reddit-clone/src/frontend/pages/Upload.js"],"sourcesContent":["import { Image, Keyboard, StyleSheet, Text, TextInput, TouchableOpacity, TouchableWithoutFeedback, View } from \"react-native\";\r\nimport { palette } from \"../styles/global-styles\";\r\nimport { useState } from \"react\";\r\nimport InsertImage from '../components/InsertImage.js';\r\nimport Header from \"../components/Header\";\r\n\r\nfunction Create() {\r\n\tconst [title, setTitle] = useState(\"\");\r\n\tconst [description, setDescription] = useState(\"\");\r\n\tconst [image64, setImage64] = useState(\"\");\r\n\tconst [postStatus, setPostStatus] = useState({});\r\n\tasync function handleOnSubmit() {\r\n\t\tif (title == \"\" || description == \"\") {\r\n\t\t\tconsole.warn(\"Required fields missing...\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetPostStatus({ result: 'Uploading post...', color: 'yellow' });\r\n\t\tconst post = createPost();\r\n\t\tconsole.log(post);\r\n\t\t// const response = await uploadPost(post);\r\n\t\tsetPostStatus({ result: 'Successfully uploaded post!', color: 'green'})\r\n\t}\r\n\r\n\tfunction createPost() {\r\n\t\treturn {\r\n\t\t\ttitle: title,\r\n\t\t\tdescription: description,\r\n\t\t\towner: \"owner\",\r\n\t\t\timage64: image64,\r\n\t\t\tlikes: 0,\r\n\t\t\tdislikes: 0,\r\n\t\t};\r\n\t}\r\n\r\n\tasync function uploadPost(post) {\r\n\t\tconst response = await fetch(\"https://reddit-clone-5ctl.onrender.com/uploadpost\", {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\tbody: JSON.stringify(post),\r\n\t\t});\t\r\n\t\treturn response;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<TouchableWithoutFeedback onPress={() => Keyboard.dismiss()} style={{ flex: 1, backgroundColor: 'red'}}>\r\n\t\t\t<View>\r\n\t\t\t<Header header=\"Create\" />\r\n\t\t\t\t<View style={styles.body}>\r\n\t\t\t\t\t<View style={styles.leftRightView}>\r\n\t\t\t\t\t\t<Image source={require('./../../../assets/sprites/profile-pic.png')} style={styles.profilePic} />\r\n\t\t\t\t\t\t<View style={{marginLeft: 5, justifyContent: 'center'}}>\r\n\t\t\t\t\t\t\t<Text style={styles.name}>Alexi Ikonomou</Text>\r\n\t\t\t\t\t\t\t<Text style={styles.username}>@alexiosiko</Text>\r\n\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t<InsertImage setImage64={setImage64}/>\r\n\t\t\t\t\t</View>\r\n\t\t\t\t\t<TextInput style={[styles.titleInput, styles.textInput]}\r\n\t\t\t\t\t\tonChange={handleOnChangeTitle}\r\n\t\t\t\t\t\tplaceholder=\"Post title\"\r\n\t\t\t\t\t\tplaceholderTextColor={palette.titlecolor}/>\r\n\t\t\t\t\t<TextInput style={[styles.descritionInput, styles.textInput]}\r\n\t\t\t\t\t\tonChange={handleOnChangeDescription}\r\n\t\t\t\t\t\tplaceholder=\"What do you want to talk about?\"\r\n\t\t\t\t\t\tplaceholderTextColor={palette.textcolor}\r\n\t\t\t\t\t\tmultiline={true}\r\n\t\t\t\t\t\ttextAlignVertical=\"top\"/>\r\n\t\t\t\t\t<TouchableOpacity style={styles.button} onPress={handleOnSubmit}>\r\n\t\t\t\t\t\t<Text>Upload Post</Text>\r\n\t\t\t\t\t</TouchableOpacity>\r\n\t\t\t\t\t<Text style={{ color: postStatus.color, textAlign: 'center', marginTop: 20,}}>{postStatus.result}</Text>\r\n\t\t\t\t</View>\r\n\t\t\t</View>\r\n\t\t</TouchableWithoutFeedback>)\r\n\t\r\n\tfunction handleOnChangeTitle(e) {\r\n\t\tsetTitle(e.nativeEvent.text);\r\n\t}\r\n\t\r\n\tfunction handleOnChangeDescription(e) {\r\n\t\tsetDescription(e.nativeEvent.text);\r\n\t}\r\n}\r\nconst styles = StyleSheet.create({\r\n\tbody: {\r\n\t\tpadding: 20,\r\n\t},\r\n\tleftRightView: {\r\n\t\talignItems: 'center',\r\n\t\tmarginLeft: 10,\r\n\t\tflexDirection: 'row',\r\n\t},\r\n\tname: {\r\n\t\tcolor: palette.titlecolor,\r\n\t\tfontSize: 20,\r\n\t},\r\n\tusername: {\r\n\t\tcolor: palette.textcolor,\r\n\t\tfontSize: 10,\r\n\t},\r\n\tprofilePic: {\r\n\t\tborderRadius: 25,\r\n\t\twidth: 30,\r\n\t\theight: 30,\r\n\t},\r\n\ttextInput: {\r\n\t\tbackgroundColor: palette.otherNeutral,\r\n\t\tborderRadius: 20,\r\n\t\tmarginTop: 10,\r\n\t},\t\r\n\ttitleInput: {\r\n\t\tcolor: palette.titlecolor,\r\n\t\tpadding: 20,\r\n\t},\r\n\tdescritionInput: {\r\n\t\tcolor: palette.textcolor,\r\n\t\tpadding: 20,\r\n\t\theight: 220,\r\n\t},\r\n\tbutton: {\r\n\t\tmarginTop: 15,\r\n\t\theight: 30,\r\n\t\twidth: '50%',\r\n\t\talignSelf: 'center',\r\n\t\tjustifyContent: 'center',\r\n\t\talignItems: 'center',\r\n\t\tbackgroundColor: palette.button,\r\n\t\tborderRadius: 20,\r\n\t}\r\n})\r\nexport default Create;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}