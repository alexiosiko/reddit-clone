{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport { palette } from \"../styles/global-styles\";\nimport { useEffect } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Post = function Post() {\n  useEffect(function () {\n    function fetchPosts() {\n      return _fetchPosts.apply(this, arguments);\n    }\n    function _fetchPosts() {\n      _fetchPosts = _asyncToGenerator(function* () {\n        var response = yield fetch(\"http://127.0.0.1:5000/getposts\");\n        var data = yield response.json();\n        setPosts(data);\n      });\n      return _fetchPosts.apply(this, arguments);\n    }\n  }, []);\n  function getPosts() {\n    return _getPosts.apply(this, arguments);\n  }\n  function _getPosts() {\n    _getPosts = _asyncToGenerator(function* () {\n      var response = yield fetch(\"http://127.0.0.1:5000/getposts\");\n      var data = yield response.json();\n      console.log(data);\n    });\n    return _getPosts.apply(this, arguments);\n  }\n  function setPost() {\n    return _setPost.apply(this, arguments);\n  }\n  function _setPost() {\n    _setPost = _asyncToGenerator(function* () {\n      var post = {\n        name: \"alexi\",\n        title: \"Breaking news!\",\n        description: \"A new medicine has just released! Click here blah blah blah blah ... \"\n      };\n      var response = yield fetch(\"http://127.0.0.1:5000/setpost\", {\n        method: \"POST\",\n        body: JSON.stringify(post)\n      });\n      console.log(response);\n      var jsonData = yield response.json();\n      console.log(jsonData);\n    });\n    return _setPost.apply(this, arguments);\n  }\n  return _jsxs(View, {\n    style: styles.post,\n    children: [_jsx(Text, {\n      style: styles.postText\n    }), _jsxs(View, {\n      style: styles.bottom,\n      children: [_jsx(View, {\n        style: styles.bottomItem\n      }), _jsx(View, {\n        style: styles.bottomItem\n      }), _jsx(View, {\n        style: styles.bottomItem\n      })]\n    }), _jsx(TouchableHighlight, {\n      onPress: function onPress() {\n        return getPosts();\n      },\n      children: _jsx(Text, {\n        style: {\n          backgroundColor: 'darkgreen',\n          width: 100,\n          height: 100\n        },\n        children: \"touch\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  post: {\n    alignSelf: 'center',\n    width: '90%',\n    height: 150,\n    margin: 10,\n    padding: 10,\n    backgroundColor: '#090203'\n  },\n  postText: {\n    color: 'white'\n  },\n  bottom: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignSelf: 'center',\n    position: 'absolute',\n    bottom: 0,\n    height: 20,\n    width: '100%'\n  },\n  bottomItem: {\n    width: '30%',\n    height: '100%',\n    backgroundColor: palette.neutral,\n    bottom: 10\n  }\n});\nexport default Post;","map":{"version":3,"names":["palette","useEffect","jsx","_jsx","jsxs","_jsxs","Post","fetchPosts","_fetchPosts","apply","arguments","_asyncToGenerator","response","fetch","data","json","setPosts","getPosts","_getPosts","console","log","setPost","_setPost","post","name","title","description","method","body","JSON","stringify","jsonData","View","style","styles","children","Text","postText","bottom","bottomItem","TouchableHighlight","onPress","backgroundColor","width","height","StyleSheet","create","alignSelf","margin","padding","color","flexDirection","justifyContent","position","neutral"],"sources":["C:/Users/alexi/Documents/Code/react-native/Project/src/frontend/components/Post.js"],"sourcesContent":["import { View, StyleSheet, Text, TouchableHighlight } from \"react-native\";\r\nimport { palette } from \"../styles/global-styles\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst Post = () => {\r\n\r\n\tuseEffect(() => {\r\n\t\tasync function fetchPosts() {\r\n\t\t\tconst response = await fetch(\"http://127.0.0.1:5000/getposts\");\r\n\t\t\tconst data = await response.json();\r\n\t\t\tsetPosts(data);\r\n\t\t  }\r\n\t}, [])\r\n\tasync function getPosts() {\r\n\t\tconst response = await fetch(\"http://127.0.0.1:5000/getposts\");\r\n\t\tconst data = await response.json();\r\n\t\tconsole.log(data);\r\n\t}\r\n\tasync function setPost() {\r\n\t\tconst post = {\r\n\t\t\tname: \"alexi\",\r\n\t\t\ttitle: \"Breaking news!\",\r\n\t\t\tdescription: \"A new medicine has just released! Click here blah blah blah blah ... \"\r\n\t\t}\r\n\t\tconst response = await fetch(\"http://127.0.0.1:5000/setpost\",\r\n\t\t\t{ \r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t  \tbody: JSON.stringify(post) \r\n\t\t\t});\r\n\t\t\tconsole.log(response);\r\n\t\tconst jsonData = await response.json();\r\n\t\tconsole.log(jsonData);\r\n\t}\r\n\treturn (\r\n\t<View style={styles.post}>\r\n\t\t<Text style={styles.postText}></Text>\r\n\t\t<View style={styles.bottom}>\r\n\t\t\t<View style={styles.bottomItem}></View>\r\n\t\t\t<View style={styles.bottomItem}></View>\r\n\t\t\t<View style={styles.bottomItem}></View>\r\n\t\t</View>\r\n\t\t<TouchableHighlight onPress={() => getPosts()}>\r\n\t\t\t<Text style={{backgroundColor: 'darkgreen', width: 100, height: 100}}>touch</Text>\r\n\t\t</TouchableHighlight>\r\n\t</View>\r\n\t)\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    post: { \r\n        alignSelf: 'center',\r\n        width: '90%',\r\n        height: 150,\r\n        margin: 10,\r\n        padding: 10,\r\n        backgroundColor: '#090203',\r\n    },\r\n    postText: {\r\n        color: 'white',\r\n    },\r\n    bottom: { \r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        alignSelf: 'center',\r\n        position: 'absolute',\r\n        bottom: 0,\r\n        height: 20,\r\n        width: '100%',\r\n    },\r\n    bottomItem: {\r\n        width: '30%',\r\n        height: '100%',\r\n        backgroundColor: palette.neutral,\r\n        bottom: 10,\r\n    }\r\n})\r\nexport default Post;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}