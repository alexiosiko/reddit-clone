{"ast":null,"code":"import React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { palette } from \"../styles/global-styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar BottomNav = function BottomNav(props) {\n  var handleSignIn = function handleSignIn() {};\n  var handleSetPage = function handleSetPage(page) {\n    props.setPage(page);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: function onPress() {\n        return handleSetPage('home');\n      },\n      children: _jsx(Image, {\n        source: require(\"./../../../assets/sprites/home.png\"),\n        style: styles.image\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: function onPress() {\n        return handleSetPage('explore');\n      },\n      children: _jsx(Image, {\n        source: require(\"./../../../assets/sprites/explore.png\"),\n        style: styles.image\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: function onPress() {\n        return handleSetPage('create');\n      },\n      children: _jsx(Image, {\n        source: require(\"./../../../assets/sprites/plus-icon.png\"),\n        style: styles.image\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: function onPress() {\n        return handleSetPage('notifications');\n      },\n      children: _jsx(Image, {\n        source: require(\"./../../../assets/sprites/bell.png\"),\n        style: styles.image\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: function onPress() {\n        return handleSetPage('settings');\n      },\n      children: _jsx(Image, {\n        source: require(\"./../../../assets/sprites/menu.png\"),\n        style: styles.image\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  bottom: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0\n  },\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'space-evenly',\n    backgroundColor: palette.bottom,\n    paddingBottom: Platform.OS == 'ios' ? 30 : 0,\n    borderTopWidth: 1,\n    borderColor: 'gray'\n  },\n  button: {\n    padding: 10,\n    width: 50,\n    height: 50\n  },\n  image: {\n    height: '100%',\n    width: '100%'\n  }\n});\nexport default BottomNav;","map":{"version":3,"names":["React","Image","Platform","StyleSheet","Text","TouchableOpacity","View","palette","jsx","_jsx","jsxs","_jsxs","BottomNav","props","handleSignIn","handleSetPage","page","setPage","style","styles","container","children","button","onPress","source","require","image","create","bottom","position","left","right","flex","flexDirection","justifyContent","backgroundColor","paddingBottom","OS","borderTopWidth","borderColor","padding","width","height"],"sources":["C:/Users/alexi/Documents/Code/react-native/Project/src/frontend/components/BottomNav.js"],"sourcesContent":["import React from 'react';\r\nimport { Image, Platform, StyleSheet, Text, TouchableOpacity, View } from 'react-native';\r\nimport { palette } from '../styles/global-styles';\r\n\r\nconst BottomNav = props => {\r\n    const handleSignIn = () => {\r\n    }\r\n    const handleSetPage = page => {\r\n        props.setPage(page);\r\n    }\r\n    return (\r\n            <View style={styles.container}>\r\n                <TouchableOpacity style={styles.button} onPress={() => handleSetPage('home')} >\r\n                    <Image source={require('./../../../assets/sprites/home.png')} style={styles.image}></Image>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity style={styles.button} onPress={() => handleSetPage('explore')} >\r\n                    <Image source={require('./../../../assets/sprites/explore.png')} style={styles.image}></Image>\r\n                </TouchableOpacity>\r\n\t\t\t\t<TouchableOpacity style={styles.button} onPress={() => handleSetPage('create')} >\r\n                    <Image source={require('./../../../assets/sprites/plus-icon.png')} style={styles.image}></Image>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity style={styles.button} onPress={() => handleSetPage('notifications')} >\r\n                    <Image source={require('./../../../assets/sprites/bell.png')} style={styles.image}></Image>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity style={styles.button} onPress={() => handleSetPage('settings')} >\r\n                    <Image source={require('./../../../assets/sprites/menu.png')} style={styles.image}></Image>\r\n                </TouchableOpacity>\r\n\t\t\t\t\r\n            </View>\r\n    )\r\n}\r\nconst styles = StyleSheet.create({\r\n    bottom: {\r\n        position: 'absolute',\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n    },\r\n    container: {\r\n        flex: 1,\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-evenly',\r\n        backgroundColor: palette.bottom,\r\n        paddingBottom: Platform.OS == 'ios' ? 30 : 0,\r\n\r\n\t\tborderTopWidth: 1,\r\n\t\tborderColor: 'gray',\r\n    },\r\n    button: {\r\n        padding: 10,\r\n        width: 50,\r\n        height: 50,\r\n    },\r\n\timage: {\r\n\t\theight: '100%',\r\n\t\twidth: '100%',\r\n\t}\r\n})\r\nexport default BottomNav;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}