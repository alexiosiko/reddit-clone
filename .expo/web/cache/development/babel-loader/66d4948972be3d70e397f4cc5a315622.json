{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Post from \"./Post\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction Posts(_ref) {\n  var setSelectedPost = _ref.setSelectedPost;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    posts = _useState2[0],\n    setPosts = _useState2[1];\n  useEffect(function () {\n    fetchPosts();\n  }, []);\n  function handleOnPressPost(post) {\n    setSelectedPost(post);\n  }\n  return _jsxs(ScrollView, {\n    children: [posts && posts.map(function (post) {\n      return _jsx(TouchableHighlight, {\n        onPress: function onPress() {\n          return handleOnPressPost(post);\n        },\n        children: _jsx(Post, {\n          title: post.title,\n          description: post.description,\n          postId: post._id,\n          likes: post.likes,\n          dislikes: post.dislikes,\n          image64: post.image64\n        }, String(post._id))\n      }, post._id);\n    }), _jsx(View, {\n      style: {\n        height: 100\n      }\n    })]\n  });\n  function fetchPosts() {\n    return _fetchPosts.apply(this, arguments);\n  }\n  function _fetchPosts() {\n    _fetchPosts = _asyncToGenerator(function* () {\n      try {\n        var response = yield fetch(\"https://reddit-clone-5ctl.onrender.com/getposts\");\n        var data = yield response.json();\n        setPosts(data);\n      } catch (error) {\n        console.log('error', error);\n      }\n    });\n    return _fetchPosts.apply(this, arguments);\n  }\n}\nexport default Posts;","map":{"version":3,"names":["useEffect","useState","View","ScrollView","TouchableWithoutFeedback","TouchableHighlight","Post","jsx","_jsx","jsxs","_jsxs","Posts","_ref","setSelectedPost","_useState","_useState2","_slicedToArray","posts","setPosts","fetchPosts","handleOnPressPost","post","children","map","onPress","title","description","postId","_id","likes","dislikes","image64","String","style","height","_fetchPosts","apply","arguments","_asyncToGenerator","response","fetch","data","json","error","console","log"],"sources":["C:/Users/alexi/Desktop/reddit-clone-0b981ea979a04dd91404b3a384f1c737d3fb26f5/src/frontend/components/Posts.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { View, ScrollView, TouchableWithoutFeedback, TouchableHighlight } from \"react-native\";\nimport Post from \"./Post\";\n\nfunction Posts({ setSelectedPost }) {\n\tconst [posts, setPosts] = useState([]);\n\t\n\tuseEffect(() => {\n\t\tfetchPosts();\n\t}, [])\n\n\tfunction handleOnPressPost(post) {\n\t\tsetSelectedPost(post);\n\t}\n\treturn (\n\t<ScrollView>\n\t\t{posts && posts.map(post => (\n\t\t\t<TouchableHighlight key={post._id} onPress={() => handleOnPressPost(post)} >\n\t\t\t\t<Post \n\t\t\t\t\tkey={String(post._id)}\n\t\t\t\t\ttitle={post.title}\n\t\t\t\t\tdescription={post.description}\n\t\t\t\t\tpostId={post._id}\n\t\t\t\t\tlikes={post.likes}\n\t\t\t\t\tdislikes={post.dislikes}\n\t\t\t\t\timage64={post.image64}/>\n\t\t\t</TouchableHighlight>)\n\t\t)}\n\t\t\t<View style={{ height: 100,}} />\n\n\t</ScrollView>)\n\n\tasync function fetchPosts() {\n\t\ttry {\n\t\t\tconst response = await fetch(\"https://reddit-clone-5ctl.onrender.com/getposts\");\n\t\t\tconst data = await response.json();\n\t\t\tsetPosts(data);\n\t\t} catch (error) {\n\t\t\tconsole.log('error', error);\n\t\t}\n\t}\n}\nexport default Posts;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,wBAAA;AAAA,OAAAC,kBAAA;AAE5C,OAAOC,IAAI;AAAe,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE1B,SAASC,KAAKA,CAAAC,IAAA,EAAsB;EAAA,IAAnBC,eAAe,GAAAD,IAAA,CAAfC,eAAe;EAC/B,IAAAC,SAAA,GAA0Bb,QAAQ,CAAC,EAAE,CAAC;IAAAc,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/BG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EAEtBf,SAAS,CAAC,YAAM;IACfmB,UAAU,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,SAASC,iBAAiBA,CAACC,IAAI,EAAE;IAChCR,eAAe,CAACQ,IAAI,CAAC;EACtB;EACA,OACAX,KAAA,CAACP,UAAU;IAAAmB,QAAA,GACTL,KAAK,IAAIA,KAAK,CAACM,GAAG,CAAC,UAAAF,IAAI;MAAA,OACvBb,IAAA,CAACH,kBAAkB;QAAgBmB,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMJ,iBAAiB,CAACC,IAAI,CAAC;QAAA,CAAC;QAAAC,QAAA,EACzEd,IAAA,CAACF,IAAI;UAEJmB,KAAK,EAAEJ,IAAI,CAACI,KAAM;UAClBC,WAAW,EAAEL,IAAI,CAACK,WAAY;UAC9BC,MAAM,EAAEN,IAAI,CAACO,GAAI;UACjBC,KAAK,EAAER,IAAI,CAACQ,KAAM;UAClBC,QAAQ,EAAET,IAAI,CAACS,QAAS;UACxBC,OAAO,EAAEV,IAAI,CAACU;QAAQ,GANjBC,MAAM,CAACX,IAAI,CAACO,GAAG,CAMG;MAAC,GARDP,IAAI,CAACO,GASV,CAAC;IAAA,CACtB,CAAC,EACApB,IAAA,CAACN,IAAI;MAAC+B,KAAK,EAAE;QAAEC,MAAM,EAAE;MAAI;IAAE,CAAE,CAAC;EAAA,CAEtB,CAAC;EAAC,SAECf,UAAUA,CAAA;IAAA,OAAAgB,WAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EAAA,SAAAF,YAAA;IAAAA,WAAA,GAAAG,iBAAA,CAAzB,aAA4B;MAC3B,IAAI;QACH,IAAMC,QAAQ,SAASC,KAAK,CAAC,iDAAiD,CAAC;QAC/E,IAAMC,IAAI,SAASF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCxB,QAAQ,CAACuB,IAAI,CAAC;MACf,CAAC,CAAC,OAAOE,KAAK,EAAE;QACfC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,KAAK,CAAC;MAC5B;IACD,CAAC;IAAA,OAAAR,WAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;AACF;AACA,eAAe1B,KAAK"},"metadata":{},"sourceType":"module"}