{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { palette } from \"../styles/global-styles\";\nimport Header from \"./Header\";\nimport { useEffect, useState } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nfunction Create() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    title = _useState2[0],\n    setTitle = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    description = _useState4[0],\n    setDescription = _useState4[1];\n  function handleOnChangeTitle(title) {\n    setTitle(title);\n  }\n  function handleOnChangeDescription(description) {\n    setDescription(description);\n  }\n  function handleOnSubmit() {\n    if (title == \"\" || description == \"\") {\n      console.warn(\"required fields missing ...\");\n      return;\n    }\n    var post = createPost();\n    setPost(post);\n  }\n  function createPost() {\n    return {\n      title: title,\n      description: description,\n      owner: \"owner\",\n      likes: 0,\n      dislikes: 0\n    };\n  }\n  function setPost(_x) {\n    return _setPost.apply(this, arguments);\n  }\n  function _setPost() {\n    _setPost = _asyncToGenerator(function* (post) {\n      var response = yield fetch(\"http://127.0.0.1:5000/setpost\", {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(post)\n      });\n    });\n    return _setPost.apply(this, arguments);\n  }\n  return _jsxs(_Fragment, {\n    children: [_jsx(Header, {\n      header: \"Create\"\n    }), _jsxs(View, {\n      style: styles.body,\n      children: [_jsx(TextInput, {\n        style: styles.textInput,\n        placeholder: \"Title ...\",\n        onChangeText: handleOnChangeTitle\n      }), _jsx(TextInput, {\n        style: [styles.textInput, styles.description],\n        placeholder: \"Description ...\",\n        multiline: true,\n        maxLength: 700,\n        onChangeText: handleOnChangeDescription\n      }), _jsx(TouchableHighlight, {\n        onPress: handleOnSubmit,\n        children: _jsx(View, {\n          style: styles.button,\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Post\"\n          })\n        })\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  body: {\n    width: '90%',\n    alignSelf: 'center'\n  },\n  textInput: {\n    borderRadius: 10,\n    padding: 6,\n    backgroundColor: palette.dark,\n    color: palette.textlight,\n    margin: 5\n  },\n  description: {\n    flexDirection: 'column',\n    justifyContent: 'flex-end',\n    height: 200\n  },\n  button: {\n    backgroundColor: palette.light,\n    borderRadius: 10,\n    width: '2rem'\n  },\n  buttonText: {\n    padding: 2\n  }\n});\nexport default Create;","map":{"version":3,"names":["palette","Header","useEffect","useState","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Create","_useState","_useState2","_slicedToArray","title","setTitle","_useState3","_useState4","description","setDescription","handleOnChangeTitle","handleOnChangeDescription","handleOnSubmit","console","warn","post","createPost","setPost","owner","likes","dislikes","_x","_setPost","apply","arguments","_asyncToGenerator","response","fetch","method","headers","body","JSON","stringify","children","header","View","style","styles","TextInput","textInput","placeholder","onChangeText","multiline","maxLength","TouchableHighlight","onPress","button","Text","buttonText","StyleSheet","create","width","alignSelf","borderRadius","padding","backgroundColor","dark","color","textlight","margin","flexDirection","justifyContent","height","light"],"sources":["C:/Users/alexi/Documents/Code/react-native/Project/src/frontend/components/Create.js"],"sourcesContent":["import { StyleSheet, Text, TextInput, TouchableHighlight, View } from \"react-native\";\r\nimport { palette } from \"../styles/global-styles\";\r\nimport Header from \"./Header\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nfunction Create() {\r\n\tconst [title, setTitle] = useState(\"\");\r\n\tconst [description, setDescription] = useState(\"\");\r\n\r\n\tfunction handleOnChangeTitle(title) {\r\n\t\tsetTitle(title)\r\n\t}\r\n\tfunction handleOnChangeDescription(description) {\r\n\t\tsetDescription(description)\r\n\t}\r\n\tfunction handleOnSubmit() {\r\n\t\tif (title == \"\" || description == \"\") {\r\n\t\t\tconsole.warn(\"required fields missing ...\");\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\t\tconst post = createPost();\r\n\t\tsetPost(post);\r\n\t\t\r\n\t}\r\n\tfunction createPost() {\r\n\t\treturn {\r\n\t\t\ttitle: title,\r\n\t\t\tdescription: description,\r\n\t\t\towner: \"owner\",\r\n\t\t\tlikes: 0,\r\n\t\t\tdislikes: 0,\r\n\t\t}\r\n\t}\r\n\tasync function setPost(post) {\r\n\t\tconst response = await fetch(\"http://127.0.0.1:5000/setpost\", { \r\n\t\t\tmethod: \"POST\",\r\n\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\tbody: JSON.stringify(post) \r\n\t\t});\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Header header=\"Create\" /> \r\n\t\t\t<View style={styles.body}>\r\n\t\t\t\t<TextInput style={styles.textInput} \r\n\t\t\t\t\tplaceholder=\"Title ...\"\r\n\t\t\t\t\tonChangeText={handleOnChangeTitle}></TextInput>\r\n\t\t\t\t<TextInput style={[styles.textInput, styles.description]}\r\n\t\t\t\t\tplaceholder=\"Description ...\" \r\n\t\t\t\t\tmultiline={true} \r\n\t\t\t\t\tmaxLength={700} \r\n\t\t\t\t\tonChangeText={handleOnChangeDescription}/>\r\n\t\t\t\r\n\t\t\t\t<TouchableHighlight onPress={handleOnSubmit}>\r\n\t\t\t\t\t<View style={styles.button}><Text style={styles.buttonText}>Post</Text></View>\r\n\t\t\t\t</TouchableHighlight>\r\n\t\t\t</View>\r\n\t\t</>)\r\n}\r\nconst styles = StyleSheet.create({\r\n\tbody: {\r\n\t\twidth: '90%',\r\n\t\talignSelf: 'center',\r\n\t},\r\n\ttextInput: {\r\n\t\tborderRadius: 10,\r\n\t\tpadding: 6,\r\n\t\tbackgroundColor: palette.dark,\r\n\t\tcolor: palette.textlight,\r\n\t\tmargin: 5,\r\n\t},\r\n\tdescription: {\r\n\t\tflexDirection: 'column',\r\n\t\tjustifyContent: 'flex-end',\r\n\t\theight: 200,\r\n\t},\r\n\tbutton: {\r\n\t\tbackgroundColor: palette.light,\r\n\t\tborderRadius: 10,\r\n\t\twidth: '2rem',\r\n\t},\r\n\tbuttonText: {\r\n\t\tpadding: 2,\r\n\t}\r\n})\r\nexport default Create;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}