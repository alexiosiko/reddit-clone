{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { palette } from \"../styles/global-styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction Post(_ref) {\n  var title = _ref.title,\n    description = _ref.description,\n    likes = _ref.likes,\n    dislikes = _ref.dislikes,\n    postId = _ref.postId;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isFetching = _useState2[0],\n    setIsFetching = _useState2[1];\n  useEffect(function () {}, []);\n  function handleLike() {\n    return _handleLike.apply(this, arguments);\n  }\n  function _handleLike() {\n    _handleLike = _asyncToGenerator(function* () {\n      if (isFetching == true) return;\n      var response = yield fetch(\"http://127.0.0.1:5000/likepost\", {\n        method: \"POST\",\n        body: JSON.stringify(postId),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log(response);\n    });\n    return _handleLike.apply(this, arguments);\n  }\n  function handleDislike() {\n    return _handleDislike.apply(this, arguments);\n  }\n  function _handleDislike() {\n    _handleDislike = _asyncToGenerator(function* () {\n      if (isFetching == true) return;\n      var response = yield fetch(\"http://127.0.0.1:5000/dislikepost\", {\n        method: \"POST\",\n        body: JSON.stringify(postId),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      var response_json = yield response.json();\n      console.log(response_json);\n    });\n    return _handleDislike.apply(this, arguments);\n  }\n  return _jsxs(View, {\n    style: styles.post,\n    children: [_jsx(Text, {\n      style: styles.postTitle,\n      children: title\n    }), _jsx(Text, {\n      style: styles.postDescription,\n      children: description\n    }), _jsxs(View, {\n      style: styles.bottom,\n      children: [_jsxs(View, {\n        style: styles.bottomItem,\n        children: [_jsx(TouchableOpacity, {\n          onPress: handleLike,\n          children: _jsx(Image, {\n            source: require(\"./../../../assets/sprites/likes-icon.png\"),\n            style: {\n              height: 20,\n              width: 20\n            }\n          })\n        }), _jsx(Text, {\n          style: styles.count,\n          children: likes\n        })]\n      }), _jsxs(View, {\n        style: styles.bottomItem,\n        children: [_jsx(TouchableOpacity, {\n          onPress: handleDislike,\n          children: _jsx(Image, {\n            source: require(\"./../../../assets/sprites/dislikes-icon.png\"),\n            style: {\n              height: 20,\n              width: 20\n            }\n          })\n        }), _jsx(Text, {\n          style: styles.count,\n          children: dislikes\n        })]\n      }), _jsx(View, {\n        style: styles.bottomItem\n      })]\n    })]\n  });\n}\nexport default Post;\nvar styles = StyleSheet.create({\n  post: {\n    borderRadius: 15,\n    alignSelf: 'center',\n    width: '90%',\n    height: 150,\n    margin: 10,\n    padding: 10,\n    backgroundColor: palette.dark\n  },\n  postTitle: {\n    borderRadius: 10,\n    fontSize: 25,\n    fontWeight: 'bold',\n    color: palette.title,\n    paddingLeft: 10\n  },\n  postDescription: {\n    color: palette.textlight,\n    paddingLeft: 10\n  },\n  bottom: {\n    flexDirection: 'row',\n    justifyContent: 'space-evenly',\n    alignSelf: 'center',\n    position: 'absolute',\n    bottom: 0,\n    height: 20,\n    width: '100%'\n  },\n  bottomItem: {\n    flexDirection: 'row',\n    width: '20%',\n    height: '100%',\n    bottom: 10\n  },\n  count: {\n    marginLeft: 5,\n    color: palette.textlight\n  }\n});","map":{"version":3,"names":["useEffect","useState","View","Text","StyleSheet","Image","TouchableOpacity","palette","jsx","_jsx","jsxs","_jsxs","Post","_ref","title","description","likes","dislikes","postId","_useState","_useState2","_slicedToArray","isFetching","setIsFetching","handleLike","_handleLike","apply","arguments","_asyncToGenerator","response","fetch","method","body","JSON","stringify","headers","console","log","handleDislike","_handleDislike","response_json","json","style","styles","post","children","postTitle","postDescription","bottom","bottomItem","onPress","source","require","height","width","count","create","borderRadius","alignSelf","margin","padding","backgroundColor","dark","fontSize","fontWeight","color","paddingLeft","textlight","flexDirection","justifyContent","position","marginLeft"],"sources":["C:/Users/alexi/Documents/Code/react-native/Project/src/frontend/components/Post.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { View, Text, StyleSheet, Image, TouchableOpacity } from \"react-native\";\r\nimport { palette } from \"../styles/global-styles\";\r\n\r\nfunction Post({ title, description, likes, dislikes, postId }) {\r\n\tconst [isFetching, setIsFetching] = useState(false);\r\n\tuseEffect(() => {\r\n\t}, [])\r\n\r\n\tasync function handleLike() {\r\n\t\tif (isFetching == true)\r\n\t\t\treturn;\r\n\t\tconst response = await fetch(\"http://127.0.0.1:5000/likepost\", {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\tbody: JSON.stringify(postId),\r\n\t\t\theaders: { 'Content-Type': 'application/json'},\r\n\t\t})\r\n\t\tconsole.log(response);\r\n\t}\r\n\tasync function handleDislike() {\r\n\t\tif (isFetching == true)\r\n\t\t\treturn;\r\n\t\tconst response = await fetch(\"http://127.0.0.1:5000/dislikepost\", {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\tbody: JSON.stringify(postId),\r\n\t\t\theaders: { 'Content-Type': 'application/json'},\r\n\t\t})\r\n\t\tconst response_json = await response.json();\r\n\t\tconsole.log(response_json);\r\n\t}\r\n\treturn (\r\n\t\t<View style={styles.post}>\r\n\t\t\t<Text style={styles.postTitle}>{title}</Text>\r\n\t\t\t<Text style={styles.postDescription}>{description}</Text>\r\n\t\t\t<View style={styles.bottom}>\r\n\t\t\t\t<View style={styles.bottomItem}>\r\n\t\t\t\t\t<TouchableOpacity onPress={handleLike}>\r\n\t\t\t\t\t\t<Image source={require('./../../../assets/sprites/likes-icon.png')}\r\n\t\t\t\t\t\t\tstyle={{height: 20, width: 20}}></Image>\r\n\t\t\t\t\t</TouchableOpacity>\r\n\t\t\t\t\t<Text style={styles.count}>{likes}</Text>\r\n\t\t\t\t</View>\r\n\t\t\t\t<View style={styles.bottomItem}>\r\n\t\t\t\t\t<TouchableOpacity onPress={handleDislike}>\r\n\t\t\t\t\t\t<Image source={require('./../../../assets/sprites/dislikes-icon.png')}\r\n\t\t\t\t\t\t\tstyle={{height: 20, width: 20}}></Image>\r\n\t\t\t\t\t</TouchableOpacity>\r\n\t\t\t\t\t<Text style={styles.count}>{dislikes}</Text>\r\n\t\t\t\t</View>\r\n\t\t\t\t<View style={styles.bottomItem}></View>\r\n\t\t\t</View>\r\n\t\t</View>\r\n\t);\r\n}\r\nexport default Post;\r\nconst styles = StyleSheet.create({\r\n\tpost: {\r\n\t\tborderRadius: 15,\r\n        alignSelf: 'center',\r\n        width: '90%',\r\n        height: 150,\r\n        margin: 10,\r\n        padding: 10,\r\n        backgroundColor: palette.dark,\r\n    },\r\n\tpostTitle: {\r\n\t\tborderRadius: 10,\r\n\t\tfontSize: 25,\r\n\t\tfontWeight: 'bold',\r\n\t\tcolor: palette.title,\r\n\t\tpaddingLeft: 10,\r\n\t},\r\n    postDescription: {\r\n        color: palette.textlight,\r\n\t\tpaddingLeft: 10,\r\n    },\r\n\tbottom: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-evenly',\r\n        alignSelf: 'center',\r\n        position: 'absolute',\r\n        bottom: 0,\r\n        height: 20,\r\n        width: '100%',\r\n    },\r\n    bottomItem: {\r\n\t\tflexDirection: 'row',\r\n        width: '20%',\r\n        height: '100%',\r\n\t\tbottom: 10,\r\n\t},\r\n\tcount: {\r\n\t\tmarginLeft: 5,\r\n\t\tcolor: palette.textlight,\r\n\t}\r\n})"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}