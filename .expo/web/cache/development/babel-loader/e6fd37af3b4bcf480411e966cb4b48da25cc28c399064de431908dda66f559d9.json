{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport { palette } from \"../styles/global-styles\";\nimport { useEffect, useState } from \"react\";\nimport Post from \"./Post\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction Posts() {\n  var _useState = useState([{}]),\n    _useState2 = _slicedToArray(_useState, 2),\n    posts = _useState2[0],\n    setPosts = _useState2[1];\n  useEffect(function () {\n    fetchPosts();\n  }, []);\n  return _jsx(_Fragment, {});\n  function fetchPosts() {\n    return _fetchPosts.apply(this, arguments);\n  }\n  function _fetchPosts() {\n    _fetchPosts = _asyncToGenerator(function* () {\n      var response = yield fetch(\"http://127.0.0.1:5000/getposts\");\n      if (response.ok == false) throw new Error('Failed to fetch posts');\n      var data = yield response.json();\n      setPosts(data);\n    });\n    return _fetchPosts.apply(this, arguments);\n  }\n  function setPost() {\n    return _setPost.apply(this, arguments);\n  }\n  function _setPost() {\n    _setPost = _asyncToGenerator(function* () {\n      var post = {\n        name: \"alexi\",\n        title: \"Breaking news!\",\n        description: \"A new medicine has just released! Click here blah blah blah blah ... \"\n      };\n      var response = yield fetch(\"http://127.0.0.1:5000/setpost\", {\n        method: \"POST\",\n        body: JSON.stringify(post)\n      });\n      var jsonData = yield response.json();\n    });\n    return _setPost.apply(this, arguments);\n  }\n}\nvar styles = StyleSheet.create({\n  postText: {\n    color: 'red'\n  }\n});\nexport default Posts;","map":{"version":3,"names":["palette","useEffect","useState","Post","Fragment","_Fragment","jsx","_jsx","Posts","_useState","_useState2","_slicedToArray","posts","setPosts","fetchPosts","_fetchPosts","apply","arguments","_asyncToGenerator","response","fetch","ok","Error","data","json","setPost","_setPost","post","name","title","description","method","body","JSON","stringify","jsonData","styles","StyleSheet","create","postText","color"],"sources":["C:/Users/alexi/Documents/Code/react-native/Project/src/frontend/components/Posts.js"],"sourcesContent":["import { View, StyleSheet, Text, TouchableHighlight } from \"react-native\";\r\nimport { palette } from \"../styles/global-styles\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Post from \"./Post\";\r\n\r\nfunction Posts() {\r\n\tconst [posts, setPosts] = useState([{}]);\r\n\t\r\n\tuseEffect(() => {\r\n\t\tfetchPosts();\r\n\t}, [])\r\n\treturn (\r\n\t<>\r\n\r\n\t</>)\r\n\r\n\tasync function fetchPosts() {\r\n\t\tconst response = await fetch(\"http://127.0.0.1:5000/getposts\");\r\n\t\tif (response.ok == false)\r\n\t\t\tthrow new Error('Failed to fetch posts');\r\n\t\tconst data = await response.json();\r\n\t\tsetPosts(data);\r\n\t}\r\n\tasync function setPost() {\r\n\t\tconst post = {\r\n\t\t\tname: \"alexi\",\r\n\t\t\ttitle: \"Breaking news!\",\r\n\t\t\tdescription: \"A new medicine has just released! Click here blah blah blah blah ... \"\r\n\t\t}\r\n\t\tconst response = await fetch(\"http://127.0.0.1:5000/setpost\", { \r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t  \tbody: JSON.stringify(post) \r\n\t\t\t});\r\n\t\tconst jsonData = await response.json();\r\n\t}\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    postText: {\r\n        color: 'red',\r\n    },\r\n})\r\nexport default Posts;"],"mappings":";;;;;;AACA,SAASA,OAAO;AAChB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,IAAI;AAAe,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAE1B,SAASC,KAAKA,CAAA,EAAG;EAChB,IAAAC,SAAA,GAA0BP,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAAAQ,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAjCG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EAEtBT,SAAS,CAAC,YAAM;IACfa,UAAU,EAAE;EACb,CAAC,EAAE,EAAE,CAAC;EACN,OACAP,IAAA,CAAAF,SAAA,KAEG;EAAC,SAEWS,UAAUA,CAAA;IAAA,OAAAC,WAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EAAA,SAAAF,YAAA;IAAAA,WAAA,GAAAG,iBAAA,CAAzB,aAA4B;MAC3B,IAAMC,QAAQ,SAASC,KAAK,CAAC,gCAAgC,CAAC;MAC9D,IAAID,QAAQ,CAACE,EAAE,IAAI,KAAK,EACvB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;MACzC,IAAMC,IAAI,SAASJ,QAAQ,CAACK,IAAI,EAAE;MAClCX,QAAQ,CAACU,IAAI,CAAC;IACf,CAAC;IAAA,OAAAR,WAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EAAA,SACcQ,OAAOA,CAAA;IAAA,OAAAC,QAAA,CAAAV,KAAA,OAAAC,SAAA;EAAA;EAAA,SAAAS,SAAA;IAAAA,QAAA,GAAAR,iBAAA,CAAtB,aAAyB;MACxB,IAAMS,IAAI,GAAG;QACZC,IAAI,EAAE,OAAO;QACbC,KAAK,EAAE,gBAAgB;QACvBC,WAAW,EAAE;MACd,CAAC;MACD,IAAMX,QAAQ,SAASC,KAAK,CAAC,+BAA+B,EAAE;QAC5DW,MAAM,EAAE,MAAM;QACZC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,IAAI;MAC5B,CAAC,CAAC;MACH,IAAMQ,QAAQ,SAAShB,QAAQ,CAACK,IAAI,EAAE;IACvC,CAAC;IAAA,OAAAE,QAAA,CAAAV,KAAA,OAAAC,SAAA;EAAA;AACF;AAEA,IAAMmB,MAAM,GAAGC,UAAU,CAACC,MAAM,CAAC;EAC7BC,QAAQ,EAAE;IACNC,KAAK,EAAE;EACX;AACJ,CAAC,CAAC;AACF,eAAehC,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}