{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { palette } from \"../styles/global-styles\";\nimport * as ImagePicker from 'expo-image-picker';\nimport * as ImageManipulator from 'expo-image-manipulator';\nimport * as FileSystem from 'expo-file-system';\nimport { useState } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar ImportImage = function ImportImage(_ref) {\n  var setImage64 = _ref.setImage64;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    backgroundImageUri = _useState2[0],\n    setBackgroundImageUri = _useState2[1];\n  function handleOnInsertImage() {\n    return _handleOnInsertImage.apply(this, arguments);\n  }\n  function _handleOnInsertImage() {\n    _handleOnInsertImage = _asyncToGenerator(function* () {\n      var result = yield userSelectsImage();\n      if (result.cancelled) return;\n      result = yield uriTo800By800(result.uri);\n      var base64 = yield uriToBase64(result.uri);\n      setImage64(base64);\n      setBackgroundImageUri(result.uri);\n    });\n    return _handleOnInsertImage.apply(this, arguments);\n  }\n  function userSelectsImage() {\n    return _userSelectsImage.apply(this, arguments);\n  }\n  function _userSelectsImage() {\n    _userSelectsImage = _asyncToGenerator(function* () {\n      return yield ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\n        allowsEditing: true,\n        aspect: [4, 4],\n        quality: 1\n      });\n    });\n    return _userSelectsImage.apply(this, arguments);\n  }\n  function uriTo800By800(_x) {\n    return _uriTo800By.apply(this, arguments);\n  }\n  function _uriTo800By() {\n    _uriTo800By = _asyncToGenerator(function* (uri) {\n      return yield ImageManipulator.manipulateAsync(uri, [{\n        resize: {\n          height: 1080,\n          width: 1080\n        }\n      }], {\n        compress: 1,\n        format: ImageManipulator.SaveFormat.JPEG\n      });\n    });\n    return _uriTo800By.apply(this, arguments);\n  }\n  function uriToBase64(_x2) {\n    return _uriToBase.apply(this, arguments);\n  }\n  function _uriToBase() {\n    _uriToBase = _asyncToGenerator(function* (uri) {\n      return yield FileSystem.readAsStringAsync(uri, {\n        encoding: FileSystem.EncodingType.Base64\n      });\n    });\n    return _uriToBase.apply(this, arguments);\n  }\n  return _jsx(TouchableHighlight, {\n    style: styles.touchable,\n    onPress: handleOnInsertImage,\n    children: !backgroundImageUri ? _jsx(Image, {\n      style: styles.imageBackground,\n      source: require(\"./../../../assets/sprites/picture.png\")\n    }) : _jsx(Image, {\n      style: styles.imageBackground,\n      source: {\n        uri: backgroundImageUri\n      }\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  touchable: {\n    marginLeft: '20%',\n    width: 40,\n    aspectRatio: 1 / 1,\n    borderRadius: 10\n  },\n  buttonText: {\n    color: palette.textcolor,\n    fontSize: 12,\n    textAlign: 'center',\n    padding: 2\n  },\n  imageBackground: {\n    justifyContent: 'center',\n    borderRadius: 10,\n    overflow: 'hidden',\n    height: '100%',\n    aspectRatio: 1 / 1\n  }\n});\nexport default ImportImage;","map":{"version":3,"names":["palette","ImagePicker","ImageManipulator","FileSystem","useState","jsx","_jsx","ImportImage","_ref","setImage64","_useState","_useState2","_slicedToArray","backgroundImageUri","setBackgroundImageUri","handleOnInsertImage","_handleOnInsertImage","apply","arguments","_asyncToGenerator","result","userSelectsImage","cancelled","uriTo800By800","uri","base64","uriToBase64","_userSelectsImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","allowsEditing","aspect","quality","_x","_uriTo800By","manipulateAsync","resize","height","width","compress","format","SaveFormat","JPEG","_x2","_uriToBase","readAsStringAsync","encoding","EncodingType","Base64","TouchableHighlight","style","styles","touchable","onPress","children","Image","imageBackground","source","require","StyleSheet","create","marginLeft","aspectRatio","borderRadius","buttonText","color","textcolor","fontSize","textAlign","padding","justifyContent","overflow"],"sources":["C:/Users/alexi/Documents/react-native/reddit-clone/src/frontend/components/InsertImage.js"],"sourcesContent":["import { ImageBackground, StyleSheet, Text, TouchableHighlight, View, Image } from \"react-native\";\r\nimport { palette } from \"../styles/global-styles\";\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport * as ImageManipulator from 'expo-image-manipulator';\r\nimport * as FileSystem from 'expo-file-system';\r\nimport { useState } from \"react\";\r\n\r\nconst ImportImage = ({ setImage64 }) => {\r\n\tconst [backgroundImageUri, setBackgroundImageUri] = useState(null);\r\n\tasync function handleOnInsertImage() {\r\n\t\tlet result = await userSelectsImage();\t\t\t// User selects image\r\n\t\tif (result.cancelled) \t\t\t\t\t\t\t// If user cancels STOP\r\n\t\t\treturn;\t\t\t\t\t\r\n\t\tresult = await uriTo800By800(result.uri);\t\t// Convert image to 800 x 800\r\n\t\tconst base64 = await uriToBase64(result.uri);\t// Convert image to base64Code\r\n\t\tsetImage64(base64);\t\t\t\t\t\t\t\t// Store base64Code to parent\r\n\t\tsetBackgroundImageUri(result.uri);\r\n\t}\r\n\tasync function userSelectsImage() {\r\n\t\treturn await ImagePicker.launchImageLibraryAsync({\r\n\t\t\tmediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n\t\t\tallowsEditing: true,\r\n\t\t\taspect: [4, 4],\r\n\t\t\tquality: 1,\r\n\t\t});\r\n\t}\r\n\tasync function uriTo800By800(uri) {\r\n\t\treturn await ImageManipulator.manipulateAsync(\r\n\t\t\turi,\r\n\t\t\t[{ resize: { height:1080,  width:1080 } }],\r\n\t\t\t{ compress: 1, format: ImageManipulator.SaveFormat.JPEG },\r\n\t\t);\r\n\t}\r\n\tasync function uriToBase64(uri){\r\n\t\treturn await FileSystem.readAsStringAsync(uri, {\r\n\t\t\tencoding: FileSystem.EncodingType.Base64,\r\n\t\t});\r\n\t}\r\n\r\n\treturn (\r\n\t\t<TouchableHighlight style={styles.touchable} onPress={handleOnInsertImage}>\r\n\t\t\t{!backgroundImageUri ? <Image style={styles.imageBackground} source={require('./../../../assets/sprites/picture.png')}/> \r\n\t\t\t: <Image style={styles.imageBackground} source={{ uri: backgroundImageUri}}/>}\r\n\t\t</TouchableHighlight>\r\n\t\t)\r\n}\r\nconst styles = StyleSheet.create({\r\n\ttouchable: {\r\n\t\tmarginLeft: '20%',\r\n\t\twidth: 40,\r\n\t\taspectRatio: 1/1,\r\n\t\tborderRadius: 10,\r\n\t},\r\n\tbuttonText: {\r\n\t\tcolor: palette.textcolor,\r\n\t\tfontSize: 12,\r\n\t\ttextAlign: 'center',\r\n\t\tpadding: 2,\r\n\t},\r\n\timageBackground: {\r\n\t\tjustifyContent: 'center',\r\n\t\tborderRadius: 10,\r\n\t\toverflow: 'hidden',\r\n\t\theight: '100%',\r\n\t\taspectRatio: 1/1,\r\n\t}\r\n})\r\nexport default ImportImage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}