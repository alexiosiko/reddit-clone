{"ast":null,"code":"import { FlipType } from \"../ImageManipulator.types\";\nimport { getContext } from \"../utils/getContext.web\";\nexport default (function (canvas, flip) {\n  var xFlip = flip === FlipType.Horizontal;\n  var yFlip = flip === FlipType.Vertical;\n  var result = document.createElement('canvas');\n  result.width = canvas.width;\n  result.height = canvas.height;\n  var context = getContext(result);\n  context.translate(canvas.width / 2, canvas.height / 2);\n  var xScale = xFlip ? -1 : 1;\n  var yScale = yFlip ? -1 : 1;\n  context.scale(xScale, yScale);\n  context.drawImage(canvas, -canvas.width / 2, -canvas.height / 2, canvas.width, canvas.height);\n  return result;\n});","map":{"version":3,"sources":["../../src/actions/FlipAction.web.ts"],"names":[],"mappings":"AAAA,SAAqB,QAAQ;AAC7B,SAAS,UAAU;AAEnB,gBAAe,UAAC,MAAyB,EAAE,IAAwB,EAAI;EACrE,IAAM,KAAK,GAAG,IAAI,KAAK,QAAQ,CAAC,UAAU;EAC1C,IAAM,KAAK,GAAG,IAAI,KAAK,QAAQ,CAAC,QAAQ;EAExC,IAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC;EAC/C,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK;EAC3B,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM;EAE7B,IAAM,OAAO,GAAG,UAAU,CAAC,MAAM,CAAC;EAGlC,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,EAAE,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;EAGtD,IAAM,MAAM,GAAG,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC;EAC7B,IAAM,MAAM,GAAG,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC;EAC7B,OAAO,CAAC,KAAK,CAAC,MAAM,EAAE,MAAM,CAAC;EAG7B,OAAO,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,MAAM,CAAC;EAE7F,OAAO,MAAM;AACf,CAAC","sourcesContent":["import { ActionFlip, FlipType } from '../ImageManipulator.types';\nimport { getContext } from '../utils/getContext.web';\n\nexport default (canvas: HTMLCanvasElement, flip: ActionFlip['flip']) => {\n  const xFlip = flip === FlipType.Horizontal;\n  const yFlip = flip === FlipType.Vertical;\n\n  const result = document.createElement('canvas');\n  result.width = canvas.width;\n  result.height = canvas.height;\n\n  const context = getContext(result);\n\n  // Set the origin to the center of the image\n  context.translate(canvas.width / 2, canvas.height / 2);\n\n  // Flip/flop the canvas\n  const xScale = xFlip ? -1 : 1;\n  const yScale = yFlip ? -1 : 1;\n  context.scale(xScale, yScale);\n\n  // Draw the image\n  context.drawImage(canvas, -canvas.width / 2, -canvas.height / 2, canvas.width, canvas.height);\n\n  return result;\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}