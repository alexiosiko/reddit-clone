{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport LoadingIcon from \"./LoadingIcon\";\nimport Post from \"./Post\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction Posts(_ref) {\n  var setSelectedPost = _ref.setSelectedPost;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    posts = _useState2[0],\n    setPosts = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isFetching = _useState4[0],\n    setIsFetching = _useState4[1];\n  useEffect(function () {\n    fetchPosts();\n  }, []);\n  function handleOnPressPost(post) {\n    setSelectedPost(post);\n  }\n  return _jsx(View, {\n    style: {\n      height: '100%'\n    },\n    children: isFetching ? _jsx(LoadingIcon, {\n      message: \"Fetching posts...\"\n    }) : _jsxs(ScrollView, {\n      children: [posts.map(function (post) {\n        return _jsx(TouchableHighlight, {\n          onPress: function onPress() {\n            return handleOnPressPost(post);\n          },\n          children: _jsx(Post, {\n            title: post.title,\n            description: post.description,\n            postId: post._id,\n            likes: post.likes,\n            dislikes: post.dislikes,\n            image64: post.image64\n          }, post._id)\n        }, post._id);\n      }), _jsx(View, {\n        style: {\n          height: 100\n        }\n      })]\n    })\n  });\n  function fetchPosts() {\n    return _fetchPosts.apply(this, arguments);\n  }\n  function _fetchPosts() {\n    _fetchPosts = _asyncToGenerator(function* () {\n      try {\n        var response = yield fetch(\"https://reddit-clone-5ctl.onrender.com/getposts\");\n        var data = yield response.json();\n        setPosts(data);\n      } catch (error) {\n        console.log('error', error);\n      } finally {\n        setIsFetching(false);\n      }\n    });\n    return _fetchPosts.apply(this, arguments);\n  }\n}\nexport default Posts;","map":{"version":3,"names":["useEffect","useState","View","ScrollView","TouchableWithoutFeedback","TouchableHighlight","ActivityIndicator","LoadingIcon","Post","jsx","_jsx","jsxs","_jsxs","Posts","_ref","setSelectedPost","_useState","_useState2","_slicedToArray","posts","setPosts","_useState3","_useState4","isFetching","setIsFetching","fetchPosts","handleOnPressPost","post","style","height","children","message","map","onPress","title","description","postId","_id","likes","dislikes","image64","_fetchPosts","apply","arguments","_asyncToGenerator","response","fetch","data","json","error","console","log"],"sources":["C:/Users/alexi/Documents/react-native/reddit-clone/src/frontend/components/Posts.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { View, ScrollView, TouchableWithoutFeedback, TouchableHighlight, ActivityIndicator } from \"react-native\";\r\nimport LoadingIcon from \"./LoadingIcon\";\r\nimport Post from \"./Post\";\r\n\r\nfunction Posts({ setSelectedPost }) {\r\n\tconst [posts, setPosts] = useState([]);\r\n\tconst [isFetching, setIsFetching] = useState(true);\r\n\t\r\n\tuseEffect(() => {\r\n\t\tfetchPosts();\r\n\t}, [])\r\n\r\n\tfunction handleOnPressPost(post) {\r\n\t\tsetSelectedPost(post);\r\n\t}\r\n\treturn (\r\n\t\t<View style={{height: '100%'}}>\r\n\t\t{isFetching ? <LoadingIcon message={\"Fetching posts...\"}/> :\r\n\t\t\t<ScrollView>\r\n\t\t\t{posts.map((post) => (\r\n\t\t\t\t<TouchableHighlight\r\n\t\t\t\tkey={post._id}\r\n\t\t\t\tonPress={() => handleOnPressPost(post)}\r\n\t\t\t\t>\r\n\t\t\t\t<Post\r\n\t\t\t\t\tkey={post._id}\r\n\t\t\t\t\ttitle={post.title}\r\n\t\t\t\t\tdescription={post.description}\r\n\t\t\t\t\tpostId={post._id}\r\n\t\t\t\t\tlikes={post.likes}\r\n\t\t\t\t\tdislikes={post.dislikes}\r\n\t\t\t\t\timage64={post.image64}\r\n\t\t\t\t/>\r\n\t\t\t\t</TouchableHighlight>\r\n\t\t\t))}\r\n\t\t\t<View style={{ height: 100 }} />\r\n\t\t\t</ScrollView>\r\n\t\t}\r\n\t\t</View>\r\n\t);\r\n\r\n\tasync function fetchPosts() { \r\n\t\ttry {\r\n\t\t\tconst response = await fetch(\"https://reddit-clone-5ctl.onrender.com/getposts\");\r\n\t\t\tconst data = await response.json();\r\n\t\t\tsetPosts(data);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log('error', error);\r\n\t\t} finally {\r\n\t\t\tsetIsFetching(false);\r\n\t\t}\r\n\t}\r\n}\r\nexport default Posts;\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,wBAAA;AAAA,OAAAC,kBAAA;AAAA,OAAAC,iBAAA;AAE5C,OAAOC,WAAW;AAClB,OAAOC,IAAI;AAAe,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE1B,SAASC,KAAKA,CAAAC,IAAA,EAAsB;EAAA,IAAnBC,eAAe,GAAAD,IAAA,CAAfC,eAAe;EAC/B,IAAAC,SAAA,GAA0Bf,QAAQ,CAAC,EAAE,CAAC;IAAAgB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/BG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EACtB,IAAAI,UAAA,GAAoCpB,QAAQ,CAAC,IAAI,CAAC;IAAAqB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA3CE,UAAU,GAAAD,UAAA;IAAEE,aAAa,GAAAF,UAAA;EAEhCtB,SAAS,CAAC,YAAM;IACfyB,UAAU,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,SAASC,iBAAiBA,CAACC,IAAI,EAAE;IAChCZ,eAAe,CAACY,IAAI,CAAC;EACtB;EACA,OACCjB,IAAA,CAACR,IAAI;IAAC0B,KAAK,EAAE;MAACC,MAAM,EAAE;IAAM,CAAE;IAAAC,QAAA,EAC7BP,UAAU,GAAGb,IAAA,CAACH,WAAW;MAACwB,OAAO,EAAE;IAAoB,CAAC,CAAC,GACzDnB,KAAA,CAACT,UAAU;MAAA2B,QAAA,GACVX,KAAK,CAACa,GAAG,CAAC,UAACL,IAAI;QAAA,OACfjB,IAAA,CAACL,kBAAkB;UAEnB4B,OAAO,EAAE,SAAAA,QAAA;YAAA,OAAMP,iBAAiB,CAACC,IAAI,CAAC;UAAA,CAAC;UAAAG,QAAA,EAEvCpB,IAAA,CAACF,IAAI;YAEJ0B,KAAK,EAAEP,IAAI,CAACO,KAAM;YAClBC,WAAW,EAAER,IAAI,CAACQ,WAAY;YAC9BC,MAAM,EAAET,IAAI,CAACU,GAAI;YACjBC,KAAK,EAAEX,IAAI,CAACW,KAAM;YAClBC,QAAQ,EAAEZ,IAAI,CAACY,QAAS;YACxBC,OAAO,EAAEb,IAAI,CAACa;UAAQ,GANjBb,IAAI,CAACU,GAOV;QAAC,GAXGV,IAAI,CAACU,GAYU,CAAC;MAAA,CACrB,CAAC,EACF3B,IAAA,CAACR,IAAI;QAAC0B,KAAK,EAAE;UAAEC,MAAM,EAAE;QAAI;MAAE,CAAE,CAAC;IAAA,CACpB;EAAC,CAER,CAAC;EACN,SAEaJ,UAAUA,CAAA;IAAA,OAAAgB,WAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EAAA,SAAAF,YAAA;IAAAA,WAAA,GAAAG,iBAAA,CAAzB,aAA4B;MAC3B,IAAI;QACH,IAAMC,QAAQ,SAASC,KAAK,CAAC,iDAAiD,CAAC;QAC/E,IAAMC,IAAI,SAASF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClC5B,QAAQ,CAAC2B,IAAI,CAAC;MACf,CAAC,CAAC,OAAOE,KAAK,EAAE;QACfC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,KAAK,CAAC;MAC5B,CAAC,SAAS;QACTzB,aAAa,CAAC,KAAK,CAAC;MACrB;IACD,CAAC;IAAA,OAAAiB,WAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;AACF;AACA,eAAe9B,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}