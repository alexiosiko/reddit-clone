{"ast":null,"code":"import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import{Platform}from'expo-modules-core';import{getRecoveryPropsToSave}from\"./ErroRecoveryStore\";import ExpoErrorRecovery from\"./ExpoErrorRecovery\";if(Platform.OS!=='web'){var globalHandler=ErrorUtils.getGlobalHandler();ErrorUtils.setGlobalHandler(function(){var _ref=_asyncToGenerator(function*(error,isFatal){if(ExpoErrorRecovery.saveRecoveryProps){yield ExpoErrorRecovery.saveRecoveryProps(getRecoveryPropsToSave());}globalHandler(error,isFatal);});return function(_x,_x2){return _ref.apply(this,arguments);};}());}else if(Platform.OS==='web'&&Platform.isDOMAvailable){window.addEventListener('error',function(){ExpoErrorRecovery.saveRecoveryProps(getRecoveryPropsToSave());});}","map":{"version":3,"names":["Platform","getRecoveryPropsToSave","ExpoErrorRecovery","OS","globalHandler","ErrorUtils","getGlobalHandler","setGlobalHandler","_ref","_asyncToGenerator","error","isFatal","saveRecoveryProps","_x","_x2","apply","arguments","isDOMAvailable","window","addEventListener"],"sources":["C:\\Users\\alexi\\Documents\\react-native\\reddit-clone\\node_modules\\expo-error-recovery\\src\\ErrorRecovery.fx.ts"],"sourcesContent":["import { Platform } from 'expo-modules-core';\n\nimport { getRecoveryPropsToSave } from './ErroRecoveryStore';\nimport ExpoErrorRecovery from './ExpoErrorRecovery';\n\nif (Platform.OS !== 'web') {\n  const globalHandler = ErrorUtils.getGlobalHandler();\n  // ErrorUtils came from react-native\n  // https://github.com/facebook/react-native/blob/1151c096dab17e5d9a6ac05b61aacecd4305f3db/Libraries/vendor/core/ErrorUtils.js#L25\n  ErrorUtils.setGlobalHandler(async (error, isFatal) => {\n    if (ExpoErrorRecovery.saveRecoveryProps) {\n      await ExpoErrorRecovery.saveRecoveryProps(getRecoveryPropsToSave());\n    }\n    globalHandler(error, isFatal);\n  });\n} else if (Platform.OS === 'web' && Platform.isDOMAvailable) {\n  window.addEventListener('error', () => {\n    ExpoErrorRecovery.saveRecoveryProps(getRecoveryPropsToSave());\n  });\n}\n"],"mappings":"uEAAA,OAASA,QAAQ,KAAQ,mBAAmB,CAE5C,OAASC,sBAAsB,2BAC/B,MAAO,CAAAC,iBAAiB,2BAExB,GAAIF,QAAQ,CAACG,EAAE,GAAK,KAAK,CAAE,CACzB,GAAM,CAAAC,aAAa,CAAGC,UAAU,CAACC,gBAAgB,EAAE,CAGnDD,UAAU,CAACE,gBAAgB,gBAAAC,IAAA,CAAAC,iBAAA,CAAC,UAAOC,KAAK,CAAEC,OAAO,CAAI,CACnD,GAAIT,iBAAiB,CAACU,iBAAiB,CAAE,CACvC,KAAM,CAAAV,iBAAiB,CAACU,iBAAiB,CAACX,sBAAsB,EAAE,CAAC,C,CAErEG,aAAa,CAACM,KAAK,CAAEC,OAAO,CAAC,CAC/B,CAAC,kBAAAE,EAAA,CAAAC,GAAA,SAAAN,IAAA,CAAAO,KAAA,MAAAC,SAAA,QAAC,C,CACH,IAAM,IAAIhB,QAAQ,CAACG,EAAE,GAAK,KAAK,EAAIH,QAAQ,CAACiB,cAAc,CAAE,CAC3DC,MAAM,CAACC,gBAAgB,CAAC,OAAO,CAAE,UAAK,CACpCjB,iBAAiB,CAACU,iBAAiB,CAACX,sBAAsB,EAAE,CAAC,CAC/D,CAAC,CAAC,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}