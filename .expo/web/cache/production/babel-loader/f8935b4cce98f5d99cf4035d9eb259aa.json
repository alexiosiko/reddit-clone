{"ast":null,"code":"import{getContext}from\"../utils/getContext.web\";function sizeFromAngle(width,height,angle){var radians=angle*Math.PI/180;var c=Math.cos(radians);var s=Math.sin(radians);if(s<0){s=-s;}if(c<0){c=-c;}return{width:height*s+width*c,height:height*c+width*s};}export default(function(canvas,degrees){var _sizeFromAngle=sizeFromAngle(canvas.width,canvas.height,degrees),width=_sizeFromAngle.width,height=_sizeFromAngle.height;var result=document.createElement('canvas');result.width=width;result.height=height;var context=getContext(result);context.translate(result.width/2,result.height/2);var radians=degrees*Math.PI/180;context.rotate(radians);context.drawImage(canvas,-canvas.width/2,-canvas.height/2,canvas.width,canvas.height);return result;});","map":{"version":3,"sources":["../../src/actions/RotateAction.web.ts"],"names":[],"mappings":"AACA,OAAS,UAAU,+BAEnB,QAAS,CAAA,aAAa,CACpB,KAAa,CACb,MAAc,CACd,KAAa,CAAA,CAEb,GAAM,CAAA,OAAO,CAAI,KAAK,CAAG,IAAI,CAAC,EAAE,CAAI,GAAG,CACvC,GAAI,CAAA,CAAC,CAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CACzB,GAAI,CAAA,CAAC,CAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CACzB,GAAI,CAAC,CAAG,CAAC,CAAE,CACT,CAAC,CAAG,CAAC,CAAC,CACP,CACD,GAAI,CAAC,CAAG,CAAC,CAAE,CACT,CAAC,CAAG,CAAC,CAAC,CACP,CACD,MAAO,CAAE,KAAK,CAAE,MAAM,CAAG,CAAC,CAAG,KAAK,CAAG,CAAC,CAAE,MAAM,CAAE,MAAM,CAAG,CAAC,CAAG,KAAK,CAAG,CAAC,CAAE,CAC1E,CAEA,eAAe,SAAC,MAAyB,CAAE,OAA+B,CAAI,CAC5E,IAAA,cAAA,CAA0B,aAAa,CAAC,MAAM,CAAC,KAAK,CAAE,MAAM,CAAC,MAAM,CAAE,OAAO,CAAC,CAArE,KAAK,CAAA,cAAA,CAAL,KAAK,CAAE,MAAM,CAAA,cAAA,CAAN,MAAM,CAErB,GAAM,CAAA,MAAM,CAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAC/C,MAAM,CAAC,KAAK,CAAG,KAAK,CACpB,MAAM,CAAC,MAAM,CAAG,MAAM,CAEtB,GAAM,CAAA,OAAO,CAAG,UAAU,CAAC,MAAM,CAAC,CAGlC,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,CAAG,CAAC,CAAE,MAAM,CAAC,MAAM,CAAG,CAAC,CAAC,CAGtD,GAAM,CAAA,OAAO,CAAI,OAAO,CAAG,IAAI,CAAC,EAAE,CAAI,GAAG,CACzC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,CAGvB,OAAO,CAAC,SAAS,CAAC,MAAM,CAAE,CAAC,MAAM,CAAC,KAAK,CAAG,CAAC,CAAE,CAAC,MAAM,CAAC,MAAM,CAAG,CAAC,CAAE,MAAM,CAAC,KAAK,CAAE,MAAM,CAAC,MAAM,CAAC,CAE7F,MAAO,CAAA,MAAM,CACf,CAAC","sourcesContent":["import { ActionRotate } from '../ImageManipulator.types';\nimport { getContext } from '../utils/getContext.web';\n\nfunction sizeFromAngle(\n  width: number,\n  height: number,\n  angle: number\n): { width: number; height: number } {\n  const radians = (angle * Math.PI) / 180;\n  let c = Math.cos(radians);\n  let s = Math.sin(radians);\n  if (s < 0) {\n    s = -s;\n  }\n  if (c < 0) {\n    c = -c;\n  }\n  return { width: height * s + width * c, height: height * c + width * s };\n}\n\nexport default (canvas: HTMLCanvasElement, degrees: ActionRotate['rotate']) => {\n  const { width, height } = sizeFromAngle(canvas.width, canvas.height, degrees);\n\n  const result = document.createElement('canvas');\n  result.width = width;\n  result.height = height;\n\n  const context = getContext(result);\n\n  // Set the origin to the center of the image\n  context.translate(result.width / 2, result.height / 2);\n\n  // Rotate the canvas around the origin\n  const radians = (degrees * Math.PI) / 180;\n  context.rotate(radians);\n\n  // Draw the image\n  context.drawImage(canvas, -canvas.width / 2, -canvas.height / 2, canvas.width, canvas.height);\n\n  return result;\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}