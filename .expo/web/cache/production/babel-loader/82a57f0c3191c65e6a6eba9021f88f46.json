{"ast":null,"code":"import{FlipType,SaveFormat}from\"./ImageManipulator.types\";export function validateArguments(uri,actions,saveOptions){validateUri(uri);validateActions(actions);validateSaveOptions(saveOptions);}export function validateUri(uri){if(!(typeof uri==='string')){throw new TypeError('The \"uri\" argument must be a string');}}export function validateActions(actions){if(!Array.isArray(actions)){throw new TypeError('The \"actions\" argument must be an array');}for(var action of actions){if(typeof action!=='object'||action===null){throw new TypeError('Action must be an object');}var supportedActionTypes=['crop','flip','rotate','resize'];var actionKeys=Object.keys(action);if(actionKeys.length!==1){throw new TypeError(\"Single action must contain exactly one transformation: \"+supportedActionTypes.join(', '));}var actionType=actionKeys[0];if(!supportedActionTypes.includes(actionType)){throw new TypeError(\"Unsupported action type: \"+actionType);}if(actionType==='crop'){validateCropAction(action);}else if(actionType==='flip'){validateFlipAction(action);}else if(actionType==='rotate'){validateRotateAction(action);}else if(actionType==='resize'){validateResizeAction(action);}}}function validateCropAction(action){var isValid=typeof action.crop==='object'&&action.crop!==null&&typeof action.crop.originX==='number'&&typeof action.crop.originY==='number'&&typeof action.crop.width==='number'&&typeof action.crop.height==='number';if(!isValid){throw new TypeError('Crop action must be an object of shape { originX: number; originY: number; width: number; height: number }');}}function validateFlipAction(action){if(typeof action.flip!=='string'||![FlipType.Horizontal,FlipType.Vertical].includes(action.flip)){throw new TypeError(\"Unsupported flip type: \"+action.flip);}}function validateRotateAction(action){if(typeof action.rotate!=='number'){throw new TypeError('Rotation must be a number');}}function validateResizeAction(action){var isValid=typeof action.resize==='object'&&action.resize!==null&&(typeof action.resize.width==='number'||typeof action.resize.width==='undefined')&&(typeof action.resize.height==='number'||typeof action.resize.height==='undefined');if(!isValid){throw new TypeError('Resize action must be an object of shape { width?: number; height?: number }');}}export function validateSaveOptions(_ref){var base64=_ref.base64,compress=_ref.compress,format=_ref.format;if(base64!==undefined&&typeof base64!=='boolean'){throw new TypeError('The \"base64\" argument must be a boolean');}if(compress!==undefined){if(typeof compress!=='number'){throw new TypeError('The \"compress\" argument must be a number');}if(compress<0||compress>1){throw new TypeError('The \"compress\" argument must be a number between 0 and 1');}}var allowedFormats=[SaveFormat.JPEG,SaveFormat.PNG,SaveFormat.WEBP];if(format!==undefined&&!allowedFormats.includes(format)){throw new TypeError(\"The \\\"format\\\" argument must be one of: \"+allowedFormats.join(', '));}}","map":{"version":3,"sources":["../src/validators.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Action,\n  ActionCrop,\n  ActionFlip,\n  ActionResize,\n  ActionRotate,\n  FlipType,\n  SaveFormat,\n  SaveOptions,\n} from './ImageManipulator.types';\n\nexport function validateArguments(uri: string, actions: Action[], saveOptions: SaveOptions) {\n  validateUri(uri);\n  validateActions(actions);\n  validateSaveOptions(saveOptions);\n}\n\nexport function validateUri(uri: string): void {\n  if (!(typeof uri === 'string')) {\n    throw new TypeError('The \"uri\" argument must be a string');\n  }\n}\n\nexport function validateActions(actions: Action[]): void {\n  if (!Array.isArray(actions)) {\n    throw new TypeError('The \"actions\" argument must be an array');\n  }\n  for (const action of actions) {\n    if (typeof action !== 'object' || action === null) {\n      throw new TypeError('Action must be an object');\n    }\n    const supportedActionTypes = ['crop', 'flip', 'rotate', 'resize'];\n    const actionKeys = Object.keys(action);\n    if (actionKeys.length !== 1) {\n      throw new TypeError(\n        `Single action must contain exactly one transformation: ${supportedActionTypes.join(', ')}`\n      );\n    }\n    const actionType = actionKeys[0];\n    if (!supportedActionTypes.includes(actionType)) {\n      throw new TypeError(`Unsupported action type: ${actionType}`);\n    }\n\n    if (actionType === 'crop') {\n      validateCropAction(action as ActionCrop);\n    } else if (actionType === 'flip') {\n      validateFlipAction(action as ActionFlip);\n    } else if (actionType === 'rotate') {\n      validateRotateAction(action as ActionRotate);\n    } else if (actionType === 'resize') {\n      validateResizeAction(action as ActionResize);\n    }\n  }\n}\n\nfunction validateCropAction(action: ActionCrop): void {\n  const isValid =\n    typeof action.crop === 'object' &&\n    action.crop !== null &&\n    typeof action.crop.originX === 'number' &&\n    typeof action.crop.originY === 'number' &&\n    typeof action.crop.width === 'number' &&\n    typeof action.crop.height === 'number';\n  if (!isValid) {\n    throw new TypeError(\n      'Crop action must be an object of shape { originX: number; originY: number; width: number; height: number }'\n    );\n  }\n}\n\nfunction validateFlipAction(action: ActionFlip): void {\n  if (\n    typeof action.flip !== 'string' ||\n    ![FlipType.Horizontal, FlipType.Vertical].includes(action.flip)\n  ) {\n    throw new TypeError(`Unsupported flip type: ${action.flip}`);\n  }\n}\n\nfunction validateRotateAction(action: ActionRotate): void {\n  if (typeof action.rotate !== 'number') {\n    throw new TypeError('Rotation must be a number');\n  }\n}\n\nfunction validateResizeAction(action: ActionResize): void {\n  const isValid =\n    typeof action.resize === 'object' &&\n    action.resize !== null &&\n    (typeof action.resize.width === 'number' || typeof action.resize.width === 'undefined') &&\n    (typeof action.resize.height === 'number' || typeof action.resize.height === 'undefined');\n  if (!isValid) {\n    throw new TypeError(\n      'Resize action must be an object of shape { width?: number; height?: number }'\n    );\n  }\n}\n\nexport function validateSaveOptions({ base64, compress, format }: SaveOptions): void {\n  if (base64 !== undefined && typeof base64 !== 'boolean') {\n    throw new TypeError('The \"base64\" argument must be a boolean');\n  }\n  if (compress !== undefined) {\n    if (typeof compress !== 'number') {\n      throw new TypeError('The \"compress\" argument must be a number');\n    }\n    if (compress < 0 || compress > 1) {\n      throw new TypeError('The \"compress\" argument must be a number between 0 and 1');\n    }\n  }\n  const allowedFormats = [SaveFormat.JPEG, SaveFormat.PNG, SaveFormat.WEBP];\n  if (format !== undefined && !allowedFormats.includes(format)) {\n    throw new TypeError(`The \"format\" argument must be one of: ${allowedFormats.join(', ')}`);\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}