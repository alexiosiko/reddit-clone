{"ast":null,"code":"import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";var _MediaTypeInput;function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import{PermissionStatus,Platform}from'expo-modules-core';import{v4}from'uuid';import{MediaTypeOptions}from\"./ImagePicker.types\";var MediaTypeInput=(_MediaTypeInput={},_defineProperty(_MediaTypeInput,MediaTypeOptions.All,'video/mp4,video/quicktime,video/x-m4v,video/*,image/*'),_defineProperty(_MediaTypeInput,MediaTypeOptions.Images,'image/*'),_defineProperty(_MediaTypeInput,MediaTypeOptions.Videos,'video/mp4,video/quicktime,video/x-m4v,video/*'),_MediaTypeInput);export default{get name(){return'ExponentImagePicker';},launchImageLibraryAsync:function(){var _launchImageLibraryAsync=_asyncToGenerator(function*(_ref){var _ref$mediaTypes=_ref.mediaTypes,mediaTypes=_ref$mediaTypes===void 0?MediaTypeOptions.Images:_ref$mediaTypes,_ref$allowsMultipleSe=_ref.allowsMultipleSelection,allowsMultipleSelection=_ref$allowsMultipleSe===void 0?false:_ref$allowsMultipleSe,_ref$base=_ref.base64,base64=_ref$base===void 0?false:_ref$base;if(!Platform.isDOMAvailable){return{cancelled:true};}return yield openFileBrowserAsync({mediaTypes:mediaTypes,allowsMultipleSelection:allowsMultipleSelection,base64:base64});});function launchImageLibraryAsync(_x){return _launchImageLibraryAsync.apply(this,arguments);}return launchImageLibraryAsync;}(),launchCameraAsync:function(){var _launchCameraAsync=_asyncToGenerator(function*(_ref2){var _ref2$mediaTypes=_ref2.mediaTypes,mediaTypes=_ref2$mediaTypes===void 0?MediaTypeOptions.Images:_ref2$mediaTypes,_ref2$allowsMultipleS=_ref2.allowsMultipleSelection,allowsMultipleSelection=_ref2$allowsMultipleS===void 0?false:_ref2$allowsMultipleS,_ref2$base=_ref2.base64,base64=_ref2$base===void 0?false:_ref2$base;if(!Platform.isDOMAvailable){return{cancelled:true};}return yield openFileBrowserAsync({mediaTypes:mediaTypes,allowsMultipleSelection:allowsMultipleSelection,capture:true,base64:base64});});function launchCameraAsync(_x2){return _launchCameraAsync.apply(this,arguments);}return launchCameraAsync;}(),getCameraPermissionsAsync:function(){var _getCameraPermissionsAsync=_asyncToGenerator(function*(){return permissionGrantedResponse();});function getCameraPermissionsAsync(){return _getCameraPermissionsAsync.apply(this,arguments);}return getCameraPermissionsAsync;}(),requestCameraPermissionsAsync:function(){var _requestCameraPermissionsAsync=_asyncToGenerator(function*(){return permissionGrantedResponse();});function requestCameraPermissionsAsync(){return _requestCameraPermissionsAsync.apply(this,arguments);}return requestCameraPermissionsAsync;}(),getMediaLibraryPermissionsAsync:function(){var _getMediaLibraryPermissionsAsync=_asyncToGenerator(function*(_writeOnly){return permissionGrantedResponse();});function getMediaLibraryPermissionsAsync(_x3){return _getMediaLibraryPermissionsAsync.apply(this,arguments);}return getMediaLibraryPermissionsAsync;}(),requestMediaLibraryPermissionsAsync:function(){var _requestMediaLibraryPermissionsAsync=_asyncToGenerator(function*(_writeOnly){return permissionGrantedResponse();});function requestMediaLibraryPermissionsAsync(_x4){return _requestMediaLibraryPermissionsAsync.apply(this,arguments);}return requestMediaLibraryPermissionsAsync;}()};function permissionGrantedResponse(){return{status:PermissionStatus.GRANTED,expires:'never',granted:true,canAskAgain:true};}function openFileBrowserAsync(_ref3){var mediaTypes=_ref3.mediaTypes,_ref3$capture=_ref3.capture,capture=_ref3$capture===void 0?false:_ref3$capture,_ref3$allowsMultipleS=_ref3.allowsMultipleSelection,allowsMultipleSelection=_ref3$allowsMultipleS===void 0?false:_ref3$allowsMultipleS,base64=_ref3.base64;var mediaTypeFormat=MediaTypeInput[mediaTypes];var input=document.createElement('input');input.style.display='none';input.setAttribute('type','file');input.setAttribute('accept',mediaTypeFormat);input.setAttribute('id',v4());if(allowsMultipleSelection){input.setAttribute('multiple','multiple');}if(capture){input.setAttribute('capture','camera');}document.body.appendChild(input);return new Promise(function(resolve,reject){input.addEventListener('change',_asyncToGenerator(function*(){if(input.files){if(!allowsMultipleSelection){var img=yield readFile(input.files[0],{base64:base64});resolve(_objectSpread({},img));}else{var imgs=yield Promise.all(Array.from(input.files).map(function(file){return readFile(file,{base64:base64});}));resolve({cancelled:false,selected:imgs});}}document.body.removeChild(input);}));var event=new MouseEvent('click');input.dispatchEvent(event);});}function readFile(targetFile,options){return new Promise(function(resolve,reject){var reader=new FileReader();reader.onerror=function(){reject(new Error(\"Failed to read the selected media because the operation failed.\"));};reader.onload=function(_ref5){var target=_ref5.target;var uri=target.result;var returnRaw=function returnRaw(){return resolve({uri:uri,width:0,height:0,cancelled:false});};if(typeof uri==='string'){var image=new Image();image.src=uri;image.onload=function(){var _image$naturalWidth,_image$naturalHeight;return resolve(_objectSpread({uri:uri,width:(_image$naturalWidth=image.naturalWidth)!=null?_image$naturalWidth:image.width,height:(_image$naturalHeight=image.naturalHeight)!=null?_image$naturalHeight:image.height,cancelled:false},options.base64&&{base64:uri.substr(uri.indexOf(',')+1)}));};image.onerror=function(){return returnRaw();};}else{returnRaw();}};reader.readAsDataURL(targetFile);});}","map":{"version":3,"sources":["../src/ExponentImagePicker.web.ts"],"names":[],"mappings":"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","sourcesContent":["import { PermissionResponse, PermissionStatus, Platform } from 'expo-modules-core';\nimport { v4 } from 'uuid';\n\nimport {\n  ExpandImagePickerResult,\n  ImageInfo,\n  ImagePickerMultipleResult,\n  ImagePickerResult,\n  MediaTypeOptions,\n  OpenFileBrowserOptions,\n} from './ImagePicker.types';\n\nconst MediaTypeInput = {\n  [MediaTypeOptions.All]: 'video/mp4,video/quicktime,video/x-m4v,video/*,image/*',\n  [MediaTypeOptions.Images]: 'image/*',\n  [MediaTypeOptions.Videos]: 'video/mp4,video/quicktime,video/x-m4v,video/*',\n};\n\nexport default {\n  get name(): string {\n    return 'ExponentImagePicker';\n  },\n\n  async launchImageLibraryAsync({\n    mediaTypes = MediaTypeOptions.Images,\n    allowsMultipleSelection = false,\n    base64 = false,\n  }): Promise<ImagePickerResult | ImagePickerMultipleResult> {\n    // SSR guard\n    if (!Platform.isDOMAvailable) {\n      return { cancelled: true };\n    }\n    return await openFileBrowserAsync({\n      mediaTypes,\n      allowsMultipleSelection,\n      base64,\n    });\n  },\n\n  async launchCameraAsync({\n    mediaTypes = MediaTypeOptions.Images,\n    allowsMultipleSelection = false,\n    base64 = false,\n  }): Promise<ImagePickerResult | ImagePickerMultipleResult> {\n    // SSR guard\n    if (!Platform.isDOMAvailable) {\n      return { cancelled: true };\n    }\n    return await openFileBrowserAsync({\n      mediaTypes,\n      allowsMultipleSelection,\n      capture: true,\n      base64,\n    });\n  },\n\n  /*\n   * Delegate to expo-permissions to request camera permissions\n   */\n  async getCameraPermissionsAsync() {\n    return permissionGrantedResponse();\n  },\n  async requestCameraPermissionsAsync() {\n    return permissionGrantedResponse();\n  },\n\n  /*\n   * Camera roll permissions don't need to be requested on web, so we always\n   * respond with granted.\n   */\n  async getMediaLibraryPermissionsAsync(_writeOnly: boolean) {\n    return permissionGrantedResponse();\n  },\n  async requestMediaLibraryPermissionsAsync(_writeOnly: boolean): Promise<PermissionResponse> {\n    return permissionGrantedResponse();\n  },\n};\n\nfunction permissionGrantedResponse(): PermissionResponse {\n  return {\n    status: PermissionStatus.GRANTED,\n    expires: 'never',\n    granted: true,\n    canAskAgain: true,\n  };\n}\n\nfunction openFileBrowserAsync<T extends OpenFileBrowserOptions>({\n  mediaTypes,\n  capture = false,\n  allowsMultipleSelection = false,\n  base64,\n}: T): Promise<ExpandImagePickerResult<T>> {\n  const mediaTypeFormat = MediaTypeInput[mediaTypes];\n\n  const input = document.createElement('input');\n  input.style.display = 'none';\n  input.setAttribute('type', 'file');\n  input.setAttribute('accept', mediaTypeFormat);\n  input.setAttribute('id', v4());\n  if (allowsMultipleSelection) {\n    input.setAttribute('multiple', 'multiple');\n  }\n  if (capture) {\n    input.setAttribute('capture', 'camera');\n  }\n  document.body.appendChild(input);\n\n  return new Promise((resolve, reject) => {\n    input.addEventListener('change', async () => {\n      if (input.files) {\n        if (!allowsMultipleSelection) {\n          const img: ImageInfo = await readFile(input.files[0], { base64 });\n          resolve({\n            ...img,\n          } as ExpandImagePickerResult<T>);\n        } else {\n          const imgs: ImageInfo[] = await Promise.all(\n            Array.from(input.files).map((file) => readFile(file, { base64 }))\n          );\n          resolve({\n            cancelled: false,\n            selected: imgs,\n          } as ExpandImagePickerResult<T>);\n        }\n      }\n      document.body.removeChild(input);\n    });\n\n    const event = new MouseEvent('click');\n    input.dispatchEvent(event);\n  });\n}\n\nfunction readFile(targetFile: Blob, options: { base64: boolean }): Promise<ImageInfo> {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onerror = () => {\n      reject(new Error(`Failed to read the selected media because the operation failed.`));\n    };\n    reader.onload = ({ target }) => {\n      const uri = (target as any).result;\n      const returnRaw = () =>\n        resolve({\n          uri,\n          width: 0,\n          height: 0,\n          cancelled: false,\n        });\n\n      if (typeof uri === 'string') {\n        const image = new Image();\n        image.src = uri;\n        image.onload = () =>\n          resolve({\n            uri,\n            width: image.naturalWidth ?? image.width,\n            height: image.naturalHeight ?? image.height,\n            cancelled: false,\n            // The blob's result cannot be directly decoded as Base64 without\n            // first removing the Data-URL declaration preceding the\n            // Base64-encoded data. To retrieve only the Base64 encoded string,\n            // first remove data:*/*;base64, from the result.\n            // https://developer.mozilla.org/en-US/docs/Web/API/FileReader/readAsDataURL\n            ...(options.base64 && { base64: uri.substr(uri.indexOf(',') + 1) }),\n          });\n        image.onerror = () => returnRaw();\n      } else {\n        returnRaw();\n      }\n    };\n\n    reader.readAsDataURL(targetFile);\n  });\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}