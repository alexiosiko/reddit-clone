{"ast":null,"code":"import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import{PermissionStatus,createPermissionHook,UnavailabilityError,CodedError}from'expo-modules-core';import ExponentImagePicker from\"./ExponentImagePicker\";import{MediaTypeOptions,VideoExportPreset,UIImagePickerControllerQualityType,UIImagePickerPresentationStyle}from\"./ImagePicker.types\";function validateOptions(options){var aspect=options.aspect,quality=options.quality,videoMaxDuration=options.videoMaxDuration;if(aspect!=null){var _aspect=_slicedToArray(aspect,2),x=_aspect[0],y=_aspect[1];if(x<=0||y<=0){throw new CodedError('ERR_INVALID_ARGUMENT',\"Invalid aspect ratio values \"+x+\":\"+y+\". Provide positive numbers.\");}}if(quality&&(quality<0||quality>1)){throw new CodedError('ERR_INVALID_ARGUMENT',\"Invalid 'quality' value \"+quality+\". Provide a value between 0 and 1.\");}if(videoMaxDuration&&videoMaxDuration<0){throw new CodedError('ERR_INVALID_ARGUMENT',\"Invalid 'videoMaxDuration' value \"+videoMaxDuration+\". Provide a non-negative number.\");}return options;}export function getCameraPermissionsAsync(){return _getCameraPermissionsAsync.apply(this,arguments);}function _getCameraPermissionsAsync(){_getCameraPermissionsAsync=_asyncToGenerator(function*(){return ExponentImagePicker.getCameraPermissionsAsync();});return _getCameraPermissionsAsync.apply(this,arguments);}export function getCameraRollPermissionsAsync(){return _getCameraRollPermissionsAsync.apply(this,arguments);}function _getCameraRollPermissionsAsync(){_getCameraRollPermissionsAsync=_asyncToGenerator(function*(){console.warn('ImagePicker.getCameraRollPermissionsAsync() is deprecated in favour of ImagePicker.getMediaLibraryPermissionsAsync()');return getMediaLibraryPermissionsAsync();});return _getCameraRollPermissionsAsync.apply(this,arguments);}export function getMediaLibraryPermissionsAsync(){return _getMediaLibraryPermissionsAsync.apply(this,arguments);}function _getMediaLibraryPermissionsAsync(){_getMediaLibraryPermissionsAsync=_asyncToGenerator(function*(){var writeOnly=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;return ExponentImagePicker.getMediaLibraryPermissionsAsync(writeOnly);});return _getMediaLibraryPermissionsAsync.apply(this,arguments);}export function requestCameraPermissionsAsync(){return _requestCameraPermissionsAsync.apply(this,arguments);}function _requestCameraPermissionsAsync(){_requestCameraPermissionsAsync=_asyncToGenerator(function*(){return ExponentImagePicker.requestCameraPermissionsAsync();});return _requestCameraPermissionsAsync.apply(this,arguments);}export function requestCameraRollPermissionsAsync(){return _requestCameraRollPermissionsAsync.apply(this,arguments);}function _requestCameraRollPermissionsAsync(){_requestCameraRollPermissionsAsync=_asyncToGenerator(function*(){console.warn('ImagePicker.requestCameraRollPermissionsAsync() is deprecated in favour of ImagePicker.requestMediaLibraryPermissionsAsync()');return requestMediaLibraryPermissionsAsync();});return _requestCameraRollPermissionsAsync.apply(this,arguments);}export function requestMediaLibraryPermissionsAsync(){return _requestMediaLibraryPermissionsAsync.apply(this,arguments);}function _requestMediaLibraryPermissionsAsync(){_requestMediaLibraryPermissionsAsync=_asyncToGenerator(function*(){var writeOnly=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;var imagePickerMethod=ExponentImagePicker.requestMediaLibraryPermissionsAsync;return imagePickerMethod(writeOnly);});return _requestMediaLibraryPermissionsAsync.apply(this,arguments);}export var useMediaLibraryPermissions=createPermissionHook({getMethod:function getMethod(options){return getMediaLibraryPermissionsAsync(options==null?void 0:options.writeOnly);},requestMethod:function requestMethod(options){return requestMediaLibraryPermissionsAsync(options==null?void 0:options.writeOnly);}});export var useCameraPermissions=createPermissionHook({getMethod:getCameraPermissionsAsync,requestMethod:requestCameraPermissionsAsync});export function getPendingResultAsync(){return _getPendingResultAsync.apply(this,arguments);}function _getPendingResultAsync(){_getPendingResultAsync=_asyncToGenerator(function*(){if(ExponentImagePicker.getPendingResultAsync){return ExponentImagePicker.getPendingResultAsync();}return[];});return _getPendingResultAsync.apply(this,arguments);}export function launchCameraAsync(){return _launchCameraAsync.apply(this,arguments);}function _launchCameraAsync(){_launchCameraAsync=_asyncToGenerator(function*(){var options=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};if(!ExponentImagePicker.launchCameraAsync){throw new UnavailabilityError('ImagePicker','launchCameraAsync');}return yield ExponentImagePicker.launchCameraAsync(validateOptions(options));});return _launchCameraAsync.apply(this,arguments);}export function launchImageLibraryAsync(_x){return _launchImageLibraryAsync.apply(this,arguments);}function _launchImageLibraryAsync(){_launchImageLibraryAsync=_asyncToGenerator(function*(options){if(!ExponentImagePicker.launchImageLibraryAsync){throw new UnavailabilityError('ImagePicker','launchImageLibraryAsync');}if(options!=null&&options.allowsEditing&&options.allowsMultipleSelection){console.warn('[expo-image-picker] `allowsEditing` is not supported when `allowsMultipleSelection` is enabled and will be ignored.'+\"Disable either 'allowsEditing' or 'allowsMultipleSelection' in 'launchImageLibraryAsync' \"+'to fix this warning.');}return yield ExponentImagePicker.launchImageLibraryAsync(options!=null?options:{});});return _launchImageLibraryAsync.apply(this,arguments);}export{MediaTypeOptions,VideoExportPreset,PermissionStatus,UIImagePickerControllerQualityType,UIImagePickerPresentationStyle};","map":{"version":3,"sources":["../src/ImagePicker.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  PermissionStatus,\n  PermissionExpiration,\n  PermissionHookOptions,\n  PermissionResponse,\n  createPermissionHook,\n  UnavailabilityError,\n  CodedError,\n} from 'expo-modules-core';\n\nimport ExponentImagePicker from './ExponentImagePicker';\nimport {\n  CameraPermissionResponse,\n  CameraRollPermissionResponse,\n  MediaLibraryPermissionResponse,\n  ImagePickerResult,\n  ImagePickerErrorResult,\n  MediaTypeOptions,\n  ImagePickerOptions,\n  VideoExportPreset,\n  ExpandImagePickerResult,\n  ImageInfo,\n  ImagePickerMultipleResult,\n  ImagePickerCancelledResult,\n  OpenFileBrowserOptions,\n  UIImagePickerControllerQualityType,\n  UIImagePickerPresentationStyle,\n} from './ImagePicker.types';\n\nfunction validateOptions(options: ImagePickerOptions) {\n  const { aspect, quality, videoMaxDuration } = options;\n\n  if (aspect != null) {\n    const [x, y] = aspect;\n\n    if (x <= 0 || y <= 0) {\n      throw new CodedError(\n        'ERR_INVALID_ARGUMENT',\n        `Invalid aspect ratio values ${x}:${y}. Provide positive numbers.`\n      );\n    }\n  }\n\n  if (quality && (quality < 0 || quality > 1)) {\n    throw new CodedError(\n      'ERR_INVALID_ARGUMENT',\n      `Invalid 'quality' value ${quality}. Provide a value between 0 and 1.`\n    );\n  }\n\n  if (videoMaxDuration && videoMaxDuration < 0) {\n    throw new CodedError(\n      'ERR_INVALID_ARGUMENT',\n      `Invalid 'videoMaxDuration' value ${videoMaxDuration}. Provide a non-negative number.`\n    );\n  }\n\n  return options;\n}\n\n// @needsAudit\n/**\n * Checks user's permissions for accessing camera.\n * @return A promise that fulfills with an object of type [CameraPermissionResponse](#camerarollpermissionresponse).\n */\nexport async function getCameraPermissionsAsync(): Promise<CameraPermissionResponse> {\n  return ExponentImagePicker.getCameraPermissionsAsync();\n}\n\n/**\n * @deprecated Use `getMediaLibraryPermissionsAsync()` instead.\n */\nexport async function getCameraRollPermissionsAsync(): Promise<MediaLibraryPermissionResponse> {\n  console.warn(\n    'ImagePicker.getCameraRollPermissionsAsync() is deprecated in favour of ImagePicker.getMediaLibraryPermissionsAsync()'\n  );\n  return getMediaLibraryPermissionsAsync();\n}\n\n// @needsAudit\n/**\n * Checks user's permissions for accessing photos.\n * @param writeOnly Whether to request write or read and write permissions. Defaults to `false`\n * @return A promise that fulfills with an object of type [MediaLibraryPermissionResponse](#medialibrarypermissionresponse).\n */\nexport async function getMediaLibraryPermissionsAsync(\n  writeOnly: boolean = false\n): Promise<MediaLibraryPermissionResponse> {\n  return ExponentImagePicker.getMediaLibraryPermissionsAsync(writeOnly);\n}\n\n// @needsAudit\n/**\n * Asks the user to grant permissions for accessing camera. This does nothing on web because the\n * browser camera is not used.\n * @return A promise that fulfills with an object of type [CameraPermissionResponse](#camerarollpermissionresponse).\n */\nexport async function requestCameraPermissionsAsync(): Promise<CameraPermissionResponse> {\n  return ExponentImagePicker.requestCameraPermissionsAsync();\n}\n\n/**\n * @deprecated Use `requestMediaLibraryPermissionsAsync()` instead.\n */\nexport async function requestCameraRollPermissionsAsync(): Promise<MediaLibraryPermissionResponse> {\n  console.warn(\n    'ImagePicker.requestCameraRollPermissionsAsync() is deprecated in favour of ImagePicker.requestMediaLibraryPermissionsAsync()'\n  );\n  return requestMediaLibraryPermissionsAsync();\n}\n\n// @needsAudit\n/**\n * Asks the user to grant permissions for accessing user's photo. This method does nothing on web.\n * @param writeOnly Whether to request write or read and write permissions. Defaults to `false`\n * @return A promise that fulfills with an object of type [MediaLibraryPermissionResponse](#medialibrarypermissionresponse).\n */\nexport async function requestMediaLibraryPermissionsAsync(\n  writeOnly: boolean = false\n): Promise<MediaLibraryPermissionResponse> {\n  const imagePickerMethod = ExponentImagePicker.requestMediaLibraryPermissionsAsync;\n  return imagePickerMethod(writeOnly);\n}\n\n// @needsAudit\n/**\n * Check or request permissions to access the media library.\n * This uses both `requestMediaLibraryPermissionsAsync` and `getMediaLibraryPermissionsAsync` to interact with the permissions.\n *\n * @example\n * ```ts\n * const [status, requestPermission] = ImagePicker.useMediaLibraryPermissions();\n * ```\n */\nexport const useMediaLibraryPermissions = createPermissionHook<\n  MediaLibraryPermissionResponse,\n  { writeOnly?: boolean }\n>({\n  // TODO(cedric): permission requesters should have an options param or a different requester\n  getMethod: (options) => getMediaLibraryPermissionsAsync(options?.writeOnly),\n  requestMethod: (options) => requestMediaLibraryPermissionsAsync(options?.writeOnly),\n});\n\n// @needsAudit\n/**\n * Check or request permissions to access the camera.\n * This uses both `requestCameraPermissionsAsync` and `getCameraPermissionsAsync` to interact with the permissions.\n *\n * @example\n * ```ts\n * const [status, requestPermission] = ImagePicker.useCameraPermissions();\n * ```\n */\nexport const useCameraPermissions = createPermissionHook({\n  getMethod: getCameraPermissionsAsync,\n  requestMethod: requestCameraPermissionsAsync,\n});\n\n// @needsAudit\n/**\n * Android system sometimes kills the `MainActivity` after the `ImagePicker` finishes. When this\n * happens, we lost the data selected from the `ImagePicker`. However, you can retrieve the lost\n * data by calling `getPendingResultAsync`. You can test this functionality by turning on\n * `Don't keep activities` in the developer options.\n * @return\n * - **On Android:** a promise that resolves to an array of objects of exactly same type as in\n * `ImagePicker.launchImageLibraryAsync` or `ImagePicker.launchCameraAsync` if the `ImagePicker`\n * finished successfully. Otherwise, to the array of [`ImagePickerErrorResult`](#imagepickerimagepickererrorresult).\n * - **On other platforms:** an empty array.\n */\nexport async function getPendingResultAsync(): Promise<\n  (ImagePickerResult | ImagePickerErrorResult)[]\n> {\n  if (ExponentImagePicker.getPendingResultAsync) {\n    return ExponentImagePicker.getPendingResultAsync();\n  }\n  return [];\n}\n\n// @needsAudit\n/**\n * Display the system UI for taking a photo with the camera. Requires `Permissions.CAMERA`.\n * On Android and iOS 10 `Permissions.CAMERA_ROLL` is also required. On mobile web, this must be\n * called immediately in a user interaction like a button press, otherwise the browser will block\n * the request without a warning.\n * > **Note:** Make sure that you handle `MainActivity` destruction on **Android**. See [ImagePicker.getPendingResultAsync](#imagepickergetpendingresultasync).\n * > **Notes for Web:** The system UI can only be shown after user activation (e.g. a `Button` press).\n * Therefore, calling `launchCameraAsync` in `componentDidMount`, for example, will **not** work as\n * intended. The `cancelled` event will not be returned in the browser due to platform restrictions\n * and inconsistencies across browsers.\n * @param options An `ImagePickerOptions` object.\n * @return If the user cancelled the action, the method returns `{ cancelled: true }`. Otherwise,\n * this method returns information about the selected media item. When the chosen item is an image,\n * this method returns `{ cancelled: false, type: 'image', uri, width, height, exif, base64 }`;\n * when the item is a video, this method returns `{ cancelled: false, type: 'video', uri, width, height, duration }`.\n */\nexport async function launchCameraAsync(\n  options: ImagePickerOptions = {}\n): Promise<ImagePickerResult> {\n  if (!ExponentImagePicker.launchCameraAsync) {\n    throw new UnavailabilityError('ImagePicker', 'launchCameraAsync');\n  }\n  return await ExponentImagePicker.launchCameraAsync(validateOptions(options));\n}\n\n// @needsAudit\n/**\n * Display the system UI for choosing an image or a video from the phone's library.\n * Requires `Permissions.MEDIA_LIBRARY` on iOS 10 only. On mobile web, this must be called\n * immediately in a user interaction like a button press, otherwise the browser will block the\n * request without a warning.\n * **Animated GIFs support** If the selected image is an animated GIF, the result image will be an\n * animated GIF too if and only if `quality` is set to `undefined` and `allowsEditing` is set to `false`.\n * Otherwise compression and/or cropper will pick the first frame of the GIF and return it as the\n * result (on Android the result will be a PNG, on iOS — GIF).\n * > **Notes for Web:** The system UI can only be shown after user activation (e.g. a `Button` press).\n * Therefore, calling `launchImageLibraryAsync` in `componentDidMount`, for example, will **not**\n * work as intended. The `cancelled` event will not be returned in the browser due to platform\n * restrictions and inconsistencies across browsers.\n * @param options An object extended by [`ImagePickerOptions`](#imagepickeroptions).\n * @return If the user cancelled the action, the method returns `{ cancelled: true }`. Otherwise,\n * this method returns information about the selected media item. When the chosen item is an image,\n * this method returns `{ cancelled: false, type: 'image', uri, width, height, exif, base64 }`;\n * when the item is a video, this method returns `{ cancelled: false, type: 'video', uri, width, height, duration }`.\n */\nexport async function launchImageLibraryAsync<T extends ImagePickerOptions>(\n  options?: T\n): Promise<ExpandImagePickerResult<T>> {\n  if (!ExponentImagePicker.launchImageLibraryAsync) {\n    throw new UnavailabilityError('ImagePicker', 'launchImageLibraryAsync');\n  }\n  if (options?.allowsEditing && options.allowsMultipleSelection) {\n    console.warn(\n      '[expo-image-picker] `allowsEditing` is not supported when `allowsMultipleSelection` is enabled and will be ignored.' +\n        \"Disable either 'allowsEditing' or 'allowsMultipleSelection' in 'launchImageLibraryAsync' \" +\n        'to fix this warning.'\n    );\n  }\n  return await ExponentImagePicker.launchImageLibraryAsync(options ?? {});\n}\n\nexport {\n  MediaTypeOptions,\n  ImagePickerOptions,\n  ImagePickerResult,\n  ImagePickerErrorResult,\n  VideoExportPreset,\n  CameraPermissionResponse,\n  CameraRollPermissionResponse,\n  MediaLibraryPermissionResponse,\n  PermissionStatus,\n  PermissionExpiration,\n  PermissionHookOptions,\n  PermissionResponse,\n  ImageInfo,\n  ImagePickerMultipleResult,\n  ImagePickerCancelledResult,\n  OpenFileBrowserOptions,\n  ExpandImagePickerResult,\n  UIImagePickerControllerQualityType,\n  UIImagePickerPresentationStyle,\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}