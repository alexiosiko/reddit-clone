{"ast":null,"code":"import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import{crop,flip,resize,rotate}from\"./actions/index.web\";import{getContext}from\"./utils/getContext.web\";function getResults(canvas,options){var uri;if(options){var _options$compress;var _options$format=options.format,format=_options$format===void 0?'png':_options$format;if(options.format==='png'&&options.compress!==undefined){console.warn('compress is not supported with png format.');}var quality=Math.min(1,Math.max(0,(_options$compress=options.compress)!=null?_options$compress:1));uri=canvas.toDataURL('image/'+format,quality);}else{uri=canvas.toDataURL();}return{uri:uri,width:canvas.width,height:canvas.height,base64:uri.replace(/^data:image\\/\\w+;base64,/,'')};}function loadImageAsync(uri){return new Promise(function(resolve,reject){var imageSource=new Image();imageSource.crossOrigin='anonymous';var canvas=document.createElement('canvas');imageSource.onload=function(){canvas.width=imageSource.naturalWidth;canvas.height=imageSource.naturalHeight;var context=getContext(canvas);context.drawImage(imageSource,0,0,imageSource.naturalWidth,imageSource.naturalHeight);resolve(canvas);};imageSource.onerror=function(){return reject(canvas);};imageSource.src=uri;});}export default{get name(){return'ExpoImageManipulator';},manipulateAsync:function(){var _manipulateAsync=_asyncToGenerator(function*(uri){var actions=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];var options=arguments.length>2?arguments[2]:undefined;var originalCanvas=yield loadImageAsync(uri);var resultCanvas=actions.reduce(function(canvas,action){if('crop'in action){return crop(canvas,action.crop);}else if('resize'in action){return resize(canvas,action.resize);}else if('flip'in action){return flip(canvas,action.flip);}else if('rotate'in action){return rotate(canvas,action.rotate);}else{return canvas;}},originalCanvas);return getResults(resultCanvas,options);});function manipulateAsync(_x){return _manipulateAsync.apply(this,arguments);}return manipulateAsync;}()};","map":{"version":3,"names":["crop","flip","resize","rotate","getContext","getResults","canvas","options","uri","_options$compress","_options$format","format","compress","undefined","console","warn","quality","Math","min","max","toDataURL","width","height","base64","replace","loadImageAsync","Promise","resolve","reject","imageSource","Image","crossOrigin","document","createElement","onload","naturalWidth","naturalHeight","context","drawImage","onerror","src","name","manipulateAsync","_manipulateAsync","_asyncToGenerator","actions","arguments","length","originalCanvas","resultCanvas","reduce","action","_x","apply"],"sources":["C:\\Users\\alexi\\Documents\\react-native\\reddit-clone\\node_modules\\expo-image-manipulator\\src\\ExpoImageManipulator.web.ts"],"sourcesContent":["import { ImageResult, SaveOptions, Action } from './ImageManipulator.types';\nimport { crop, flip, resize, rotate } from './actions/index.web';\nimport { getContext } from './utils/getContext.web';\n\nfunction getResults(canvas: HTMLCanvasElement, options?: SaveOptions): ImageResult {\n  let uri: string;\n  if (options) {\n    const { format = 'png' } = options;\n    if (options.format === 'png' && options.compress !== undefined) {\n      console.warn('compress is not supported with png format.');\n    }\n    const quality = Math.min(1, Math.max(0, options.compress ?? 1));\n    uri = canvas.toDataURL('image/' + format, quality);\n  } else {\n    // defaults to PNG with no loss\n    uri = canvas.toDataURL();\n  }\n  return {\n    uri,\n    width: canvas.width,\n    height: canvas.height,\n    base64: uri.replace(/^data:image\\/\\w+;base64,/, ''),\n  };\n}\n\nfunction loadImageAsync(uri: string): Promise<HTMLCanvasElement> {\n  return new Promise((resolve, reject) => {\n    const imageSource = new Image();\n    imageSource.crossOrigin = 'anonymous';\n    const canvas = document.createElement('canvas');\n    imageSource.onload = () => {\n      canvas.width = imageSource.naturalWidth;\n      canvas.height = imageSource.naturalHeight;\n\n      const context = getContext(canvas);\n      context.drawImage(imageSource, 0, 0, imageSource.naturalWidth, imageSource.naturalHeight);\n\n      resolve(canvas);\n    };\n    imageSource.onerror = () => reject(canvas);\n    imageSource.src = uri;\n  });\n}\n\nexport default {\n  get name(): string {\n    return 'ExpoImageManipulator';\n  },\n  async manipulateAsync(\n    uri: string,\n    actions: Action[] = [],\n    options: SaveOptions\n  ): Promise<ImageResult> {\n    const originalCanvas = await loadImageAsync(uri);\n\n    const resultCanvas = actions.reduce((canvas, action) => {\n      if ('crop' in action) {\n        return crop(canvas, action.crop);\n      } else if ('resize' in action) {\n        return resize(canvas, action.resize);\n      } else if ('flip' in action) {\n        return flip(canvas, action.flip);\n      } else if ('rotate' in action) {\n        return rotate(canvas, action.rotate);\n      } else {\n        return canvas;\n      }\n    }, originalCanvas);\n\n    return getResults(resultCanvas, options);\n  },\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}