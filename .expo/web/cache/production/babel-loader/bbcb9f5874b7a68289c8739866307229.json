{"ast":null,"code":"import{EventEmitter}from\"../EventEmitter\";import Platform from\"../Platform\";import NativeErrorManager from\"./NativeErrorManager\";if(__DEV__&&Platform.OS==='android'&&NativeErrorManager){var onNewException='ExpoModulesCoreErrorManager.onNewException';var eventEmitter=new EventEmitter(NativeErrorManager);eventEmitter.addListener(onNewException,function(_ref){var message=_ref.message;console.error(message);});}","map":{"version":3,"sources":["../../src/sweet/setUpErrorManager.fx.ts"],"names":[],"mappings":"AAAA,OAAS,YAAY,uBACrB,MAAO,CAAA,QAAQ,mBACf,MAAO,CAAA,kBAAkB,4BAEzB,GAAI,OAAO,EAAI,QAAQ,CAAC,EAAE,GAAK,SAAS,EAAI,kBAAkB,CAAE,CAC9D,GAAM,CAAA,cAAc,CAAG,4CAA4C,CACnE,GAAM,CAAA,YAAY,CAAG,GAAI,CAAA,YAAY,CAAC,kBAAkB,CAAC,CAEzD,YAAY,CAAC,WAAW,CAAC,cAAc,CAAE,SAAA,IAAA,CAAqC,IAAlC,CAAA,OAAO,CAAA,IAAA,CAAP,OAAO,CACjD,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,CACxB,CAAC,CAAC,CACH","sourcesContent":["import { EventEmitter } from '../EventEmitter';\nimport Platform from '../Platform';\nimport NativeErrorManager from './NativeErrorManager';\n\nif (__DEV__ && Platform.OS === 'android' && NativeErrorManager) {\n  const onNewException = 'ExpoModulesCoreErrorManager.onNewException';\n  const eventEmitter = new EventEmitter(NativeErrorManager);\n\n  eventEmitter.addListener(onNewException, ({ message }: { message: string }) => {\n    console.error(message);\n  });\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}