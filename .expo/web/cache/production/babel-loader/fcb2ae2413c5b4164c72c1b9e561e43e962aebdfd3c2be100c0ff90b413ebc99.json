{"ast":null,"code":"import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import{useEffect,useState}from\"react\";import View from\"react-native-web/dist/exports/View\";import ScrollView from\"react-native-web/dist/exports/ScrollView\";import TouchableWithoutFeedback from\"react-native-web/dist/exports/TouchableWithoutFeedback\";import TouchableHighlight from\"react-native-web/dist/exports/TouchableHighlight\";import ActivityIndicator from\"react-native-web/dist/exports/ActivityIndicator\";import LoadingIcon from\"./LoadingIcon\";import Post from\"./Post\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Posts(_ref){var setSelectedPost=_ref.setSelectedPost;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),posts=_useState2[0],setPosts=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),isFetching=_useState4[0],setIsFetching=_useState4[1];useEffect(function(){fetchPosts();},[]);function handleOnPressPost(post){setSelectedPost(post);}return _jsx(View,{style:{height:'100%'},children:isFetching?_jsx(LoadingIcon,{message:\"Fetching posts...\"}):_jsxs(ScrollView,{children:[posts.map(function(post){return _jsx(TouchableHighlight,{onPress:function onPress(){return handleOnPressPost(post);},children:_jsx(Post,{title:post.title,description:post.description,postId:post._id,likes:post.likes,dislikes:post.dislikes,image64:post.image64},post._id)},post._id);}),_jsx(View,{style:{height:100}})]})});function fetchPosts(){return _fetchPosts.apply(this,arguments);}function _fetchPosts(){_fetchPosts=_asyncToGenerator(function*(){try{var response=yield fetch(\"https://reddit-clone-5ctl.onrender.com/getposts\");var data=yield response.json();setPosts(data);}catch(error){console.log('error',error);}finally{setIsFetching(false);}});return _fetchPosts.apply(this,arguments);}}export default Posts;","map":{"version":3,"names":["useEffect","useState","View","ScrollView","TouchableWithoutFeedback","TouchableHighlight","ActivityIndicator","LoadingIcon","Post","jsx","_jsx","jsxs","_jsxs","Posts","_ref","setSelectedPost","_useState","_useState2","_slicedToArray","posts","setPosts","_useState3","_useState4","isFetching","setIsFetching","fetchPosts","handleOnPressPost","post","style","height","children","message","map","onPress","title","description","postId","_id","likes","dislikes","image64","_fetchPosts","apply","arguments","_asyncToGenerator","response","fetch","data","json","error","console","log"],"sources":["C:/Users/alexi/Documents/react-native/reddit-clone/src/frontend/components/Posts.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { View, ScrollView, TouchableWithoutFeedback, TouchableHighlight, ActivityIndicator } from \"react-native\";\r\nimport LoadingIcon from \"./LoadingIcon\";\r\nimport Post from \"./Post\";\r\n\r\nfunction Posts({ setSelectedPost }) {\r\n\tconst [posts, setPosts] = useState([]);\r\n\tconst [isFetching, setIsFetching] = useState(true);\r\n\t\r\n\tuseEffect(() => {\r\n\t\tfetchPosts();\r\n\t}, [])\r\n\r\n\tfunction handleOnPressPost(post) {\r\n\t\tsetSelectedPost(post);\r\n\t}\r\n\treturn (\r\n\t\t<View style={{height: '100%'}}>\r\n\t\t{isFetching ? <LoadingIcon message={\"Fetching posts...\"}/> :\r\n\t\t\t<ScrollView>\r\n\t\t\t{posts.map((post) => (\r\n\t\t\t\t<TouchableHighlight\r\n\t\t\t\tkey={post._id}\r\n\t\t\t\tonPress={() => handleOnPressPost(post)}\r\n\t\t\t\t>\r\n\t\t\t\t<Post\r\n\t\t\t\t\tkey={post._id}\r\n\t\t\t\t\ttitle={post.title}\r\n\t\t\t\t\tdescription={post.description}\r\n\t\t\t\t\tpostId={post._id}\r\n\t\t\t\t\tlikes={post.likes}\r\n\t\t\t\t\tdislikes={post.dislikes}\r\n\t\t\t\t\timage64={post.image64}\r\n\t\t\t\t/>\r\n\t\t\t\t</TouchableHighlight>\r\n\t\t\t))}\r\n\t\t\t<View style={{ height: 100 }} />\r\n\t\t\t</ScrollView>\r\n\t\t}\r\n\t\t</View>\r\n\t);\r\n\r\n\tasync function fetchPosts() { \r\n\t\ttry {\r\n\t\t\tconst response = await fetch(\"https://reddit-clone-5ctl.onrender.com/getposts\");\r\n\t\t\tconst data = await response.json();\r\n\t\t\tsetPosts(data);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log('error', error);\r\n\t\t} finally {\r\n\t\t\tsetIsFetching(false);\r\n\t\t}\r\n\t}\r\n}\r\nexport default Posts;\r\n"],"mappings":"wIAAA,OAASA,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,IAAA,iDAAAC,UAAA,uDAAAC,wBAAA,qEAAAC,kBAAA,+DAAAC,iBAAA,uDAE5C,MAAO,CAAAC,WAAW,qBAClB,MAAO,CAAAC,IAAI,cAAe,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE1B,QAAS,CAAAC,KAAKA,CAAAC,IAAA,CAAsB,IAAnB,CAAAC,eAAe,CAAAD,IAAA,CAAfC,eAAe,CAC/B,IAAAC,SAAA,CAA0Bf,QAAQ,CAAC,EAAE,CAAC,CAAAgB,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAA/BG,KAAK,CAAAF,UAAA,IAAEG,QAAQ,CAAAH,UAAA,IACtB,IAAAI,UAAA,CAAoCpB,QAAQ,CAAC,IAAI,CAAC,CAAAqB,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAA3CE,UAAU,CAAAD,UAAA,IAAEE,aAAa,CAAAF,UAAA,IAEhCtB,SAAS,CAAC,UAAM,CACfyB,UAAU,CAAC,CAAC,CACb,CAAC,CAAE,EAAE,CAAC,CAEN,QAAS,CAAAC,iBAAiBA,CAACC,IAAI,CAAE,CAChCZ,eAAe,CAACY,IAAI,CAAC,CACtB,CACA,MACC,CAAAjB,IAAA,CAACR,IAAI,EAAC0B,KAAK,CAAE,CAACC,MAAM,CAAE,MAAM,CAAE,CAAAC,QAAA,CAC7BP,UAAU,CAAGb,IAAA,CAACH,WAAW,EAACwB,OAAO,CAAE,mBAAoB,CAAC,CAAC,CACzDnB,KAAA,CAACT,UAAU,EAAA2B,QAAA,EACVX,KAAK,CAACa,GAAG,CAAC,SAACL,IAAI,QACf,CAAAjB,IAAA,CAACL,kBAAkB,EAEnB4B,OAAO,CAAE,SAAAA,QAAA,QAAM,CAAAP,iBAAiB,CAACC,IAAI,CAAC,EAAC,CAAAG,QAAA,CAEvCpB,IAAA,CAACF,IAAI,EAEJ0B,KAAK,CAAEP,IAAI,CAACO,KAAM,CAClBC,WAAW,CAAER,IAAI,CAACQ,WAAY,CAC9BC,MAAM,CAAET,IAAI,CAACU,GAAI,CACjBC,KAAK,CAAEX,IAAI,CAACW,KAAM,CAClBC,QAAQ,CAAEZ,IAAI,CAACY,QAAS,CACxBC,OAAO,CAAEb,IAAI,CAACa,OAAQ,EANjBb,IAAI,CAACU,GAOV,CAAC,EAXGV,IAAI,CAACU,GAYU,CAAC,EACrB,CAAC,CACF3B,IAAA,CAACR,IAAI,EAAC0B,KAAK,CAAE,CAAEC,MAAM,CAAE,GAAI,CAAE,CAAE,CAAC,EACpB,CAAC,CAER,CAAC,CACN,QAEa,CAAAJ,UAAUA,CAAA,SAAAgB,WAAA,CAAAC,KAAA,MAAAC,SAAA,YAAAF,YAAA,EAAAA,WAAA,CAAAG,iBAAA,CAAzB,WAA4B,CAC3B,GAAI,CACH,GAAM,CAAAC,QAAQ,MAAS,CAAAC,KAAK,CAAC,iDAAiD,CAAC,CAC/E,GAAM,CAAAC,IAAI,MAAS,CAAAF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAClC5B,QAAQ,CAAC2B,IAAI,CAAC,CACf,CAAE,MAAOE,KAAK,CAAE,CACfC,OAAO,CAACC,GAAG,CAAC,OAAO,CAAEF,KAAK,CAAC,CAC5B,CAAC,OAAS,CACTzB,aAAa,CAAC,KAAK,CAAC,CACrB,CACD,CAAC,SAAAiB,WAAA,CAAAC,KAAA,MAAAC,SAAA,GACF,CACA,cAAe,CAAA9B,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}